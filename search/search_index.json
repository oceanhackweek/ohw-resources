{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Welcome to OceanHackWeek 2021 (OHW21)! OHW21 is a 4-day collaborative learning experience taking place August 3-6, 2021, as a hybrid in-person and virtual event. It is aimed at exploring, creating and promoting effective computation and analysis workflows for large and complex oceanographic data. It includes tutorials, data exploration, software development, collaborative projects and community networking. At our general web site (https://oceanhackweek.github.io) you can read more about OceanHackWeek, including the OHW21 organizing committee and links to events from previous years . To make sure that OHW21 will be a welcoming environment for everyone, please read our Code of Conduct carefully as part of your preparation. We expect all participants to adhere to the Code of Conduct in all interactions throughout the hackweek. Schedules There are three different schedules, corresponding to the in-person event , the main virtual event and the Oceania virtual event . The \"Oceania\" virtual event is intended to accommodate participants from Australia to India. You will be asked to choose between the two virtual groups. Go to the Schedule page for details . Preparation We will use a JupyterHub -based online environment for all OceanHackWeek computational activities, including tutorials; this environment supports both Python and R. You will need a robust internet connection and a capable laptop or desktop computer. On July 29 and 30, we will offer short \"pre-hackweek\" optional sessions to answer questions on the basics of Git, GitHub, Jupyter and core R and Python scientific libraries, and OceanHackWeek in general. The schedule is available in the Schedule page , and the Zoom link will be sent via Slack. We will use Slack, Zoom and GitHub as our primary communication and content delivery platforms. The week before OceanHackWeek you will receive via email an invitation to join the OceanHackWeek GitHub organization, https://github.com/oceanhackweek/ .","title":"Overview"},{"location":"#overview","text":"Welcome to OceanHackWeek 2021 (OHW21)! OHW21 is a 4-day collaborative learning experience taking place August 3-6, 2021, as a hybrid in-person and virtual event. It is aimed at exploring, creating and promoting effective computation and analysis workflows for large and complex oceanographic data. It includes tutorials, data exploration, software development, collaborative projects and community networking. At our general web site (https://oceanhackweek.github.io) you can read more about OceanHackWeek, including the OHW21 organizing committee and links to events from previous years . To make sure that OHW21 will be a welcoming environment for everyone, please read our Code of Conduct carefully as part of your preparation. We expect all participants to adhere to the Code of Conduct in all interactions throughout the hackweek.","title":"Overview"},{"location":"#schedules","text":"There are three different schedules, corresponding to the in-person event , the main virtual event and the Oceania virtual event . The \"Oceania\" virtual event is intended to accommodate participants from Australia to India. You will be asked to choose between the two virtual groups. Go to the Schedule page for details .","title":"Schedules"},{"location":"#preparation","text":"We will use a JupyterHub -based online environment for all OceanHackWeek computational activities, including tutorials; this environment supports both Python and R. You will need a robust internet connection and a capable laptop or desktop computer. On July 29 and 30, we will offer short \"pre-hackweek\" optional sessions to answer questions on the basics of Git, GitHub, Jupyter and core R and Python scientific libraries, and OceanHackWeek in general. The schedule is available in the Schedule page , and the Zoom link will be sent via Slack. We will use Slack, Zoom and GitHub as our primary communication and content delivery platforms. The week before OceanHackWeek you will receive via email an invitation to join the OceanHackWeek GitHub organization, https://github.com/oceanhackweek/ .","title":"Preparation"},{"location":"about_ohw/","text":"About OceanHackWeek What is a hackweek? The hackweek model has emerged in the data science community as a powerful tool for fostering exchange of ideas in research and computation by providing training in modern data analysis workflows. In contrast to conventional academic conferences or workshops, hackweeks are intensive and interactive, facilitated by three core components: tutorials on state-of-the-art methodologies, peer-learning, and on-site project work in a collaborative environment. Compared to hackathons typically focused on software development, hackweeks have a greater focus on learning and open-ended projects as informal education and peer learning opportunities. This setup is particularly powerful for sciences that require not only domain-specific knowledge but also effective computational workflows to foster rapid exchange of ideas and make discovery. This is an excellent match with the nature of oceanographic research where data are large and complex and the community is diverse and collaborative. The hackweek model adopted by OceanHackWeek was spearheaded by the successful Astro- , Neuro- , and Geohackweek . Mission Statement Core objectives The core objectives of OceanHackWeek are: Promote data and software proficiency in the ocean sciences community: Provide oceanographers with computational and data science skills to advance modern oceanographic research, which often requires the integration and manipulation of diverse sources of big data and models. Facilitate inclusive community building: Connect oceanographers across disciplines, career stages and trajectories, and diversity of experience and identity to cultivate an inclusive, open and sharing culture that catalyzes data-intensive research. Training and education We will share knowledge in modern software tools aimed at handling increasingly large and complex oceanographic datasets. Our approach will be to develop templates for best practices in solving common oceanographic data science challenges, built off a set of sample datasets provided during the hackathon. We will learn from leading experts in various fields, and use this knowledge to develop educational content that can be shared across disciplines long after the event. Our training will focus on software tools, but we will also explore challenges in successfully navigating complexity in project management and design. Networking and community building We will connect students, faculty, software developers and others across industry, government and academic settings. The connections we make during the hackathon will be maintained through an online user community. We hope our activities can foster the growth of an interdisciplinary network for solving Earth science challenges. Software development We will harness our collective talent assembled during the event to rapidly advance the development of software tools.","title":"About OHW"},{"location":"about_ohw/#about-oceanhackweek","text":"","title":"About OceanHackWeek"},{"location":"about_ohw/#what-is-a-hackweek","text":"The hackweek model has emerged in the data science community as a powerful tool for fostering exchange of ideas in research and computation by providing training in modern data analysis workflows. In contrast to conventional academic conferences or workshops, hackweeks are intensive and interactive, facilitated by three core components: tutorials on state-of-the-art methodologies, peer-learning, and on-site project work in a collaborative environment. Compared to hackathons typically focused on software development, hackweeks have a greater focus on learning and open-ended projects as informal education and peer learning opportunities. This setup is particularly powerful for sciences that require not only domain-specific knowledge but also effective computational workflows to foster rapid exchange of ideas and make discovery. This is an excellent match with the nature of oceanographic research where data are large and complex and the community is diverse and collaborative. The hackweek model adopted by OceanHackWeek was spearheaded by the successful Astro- , Neuro- , and Geohackweek .","title":"What is a hackweek?"},{"location":"about_ohw/#mission-statement","text":"","title":"Mission Statement"},{"location":"about_ohw/#core-objectives","text":"The core objectives of OceanHackWeek are: Promote data and software proficiency in the ocean sciences community: Provide oceanographers with computational and data science skills to advance modern oceanographic research, which often requires the integration and manipulation of diverse sources of big data and models. Facilitate inclusive community building: Connect oceanographers across disciplines, career stages and trajectories, and diversity of experience and identity to cultivate an inclusive, open and sharing culture that catalyzes data-intensive research.","title":"Core objectives"},{"location":"about_ohw/#training-and-education","text":"We will share knowledge in modern software tools aimed at handling increasingly large and complex oceanographic datasets. Our approach will be to develop templates for best practices in solving common oceanographic data science challenges, built off a set of sample datasets provided during the hackathon. We will learn from leading experts in various fields, and use this knowledge to develop educational content that can be shared across disciplines long after the event. Our training will focus on software tools, but we will also explore challenges in successfully navigating complexity in project management and design.","title":"Training and education"},{"location":"about_ohw/#networking-and-community-building","text":"We will connect students, faculty, software developers and others across industry, government and academic settings. The connections we make during the hackathon will be maintained through an online user community. We hope our activities can foster the growth of an interdisciplinary network for solving Earth science challenges.","title":"Networking and community building"},{"location":"about_ohw/#software-development","text":"We will harness our collective talent assembled during the event to rapidly advance the development of software tools.","title":"Software development"},{"location":"conduct/","text":"Code of Conduct OceanHackWeek (OHW) is dedicated to providing a harassment-free learning experience for everyone regardless of gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, age or religion. We do not tolerate harassment of participants in any form. Sexual language and imagery is not appropriate for any OHW venues in either in-person or virtual form, including the Slack workspace. Participants violating these rules may be sanctioned or expelled from OHW at the discretion of the organizers. Harassment includes, but is not limited to: Verbal comments that reinforce social structures of domination related to gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, age, religion. Sexual images in public spaces Deliberate intimidation, stalking, or following Harassing photography or recording Sustained disruption of talks or other events Inappropriate physical contact Unwelcome sexual attention Advocating for, or encouraging, any of the above behavior Participants asked to stop any harassing behavior are expected to comply immediately. If a participant engages in harassing behavior, the organizers retain the right to take any actions to keep the event a welcoming environment for all participants. This includes warning the offender or expulsion from OceanHackWeek with no refund. OceanHackWeek organizers may take action to redress anything designed to, or with the clear impact of, disrupting the event or making the environment hostile for any participants. We expect participants to follow these rules at all the event venues and event-related social activities. Reporting a violation Harassment and other code of conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here . This anti-harassment policy is based on the example policy from the Geek Feminism wiki, created by the Ada Initiative and other volunteers. Group discussion Q: What can each of us do to make OceanHackWeek an optimal learning environment that is inclusive and welcoming for everyone? Give people room to express themselves, helping them achieve what they want to achieve this week Be helpful and spend some time jumping start someone with coding. Open to new ideas and ways of approaching a problem, being approachable Organizers are also here to learn from others and certainly don\u2019t have all the answers! Be cognizant of different locations and time zones, engagement levels Allow and encourage different ways to engage, not just need to engage via video - like this google doc! Don\u2019t use language like \u201cobviously\u201d or \u201cclearly\u201d (don\u2019t assume something is easy for others) Ask questions, all the questions. Cameras on, so people can see that you\u2019re engaged Build bridges between all three groups by reaching out to virtual/in-person participants Making sure everyone is working from a common knowledge baseline Listen actively and pay attention +1) Creating specific times/spaces for individuals to bring up questions/concerns - helps shy folks get a chance to communicate Specifically ask folks who are quieter if they would like to contribute (but don\u2019t pressure them) Listening and adjusting behaviour if someone expresses discomfort about a behaviour Letting others know if you are uncomfortable-- especially the person causing you the discomfort if it feels safe to do so Patient and understanding that everyone from different backgrounds and experiences Communicating in open spaces like slack channels so that others can follow or join Be patient with technological problems Using we language instead of you or I esp when learning on Project teams together Being a good listener and making space for others to speak their mind or answer questions especially if I\u2019ve been the one talking Using inclusive language to make sure that we aren\u2019t inadvertently accusing or attacking anyone Smile and show a bit of patience.","title":"Code of Conduct"},{"location":"conduct/#code-of-conduct","text":"OceanHackWeek (OHW) is dedicated to providing a harassment-free learning experience for everyone regardless of gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, age or religion. We do not tolerate harassment of participants in any form. Sexual language and imagery is not appropriate for any OHW venues in either in-person or virtual form, including the Slack workspace. Participants violating these rules may be sanctioned or expelled from OHW at the discretion of the organizers. Harassment includes, but is not limited to: Verbal comments that reinforce social structures of domination related to gender, gender identity and expression, sexual orientation, disability, physical appearance, body size, race, age, religion. Sexual images in public spaces Deliberate intimidation, stalking, or following Harassing photography or recording Sustained disruption of talks or other events Inappropriate physical contact Unwelcome sexual attention Advocating for, or encouraging, any of the above behavior Participants asked to stop any harassing behavior are expected to comply immediately. If a participant engages in harassing behavior, the organizers retain the right to take any actions to keep the event a welcoming environment for all participants. This includes warning the offender or expulsion from OceanHackWeek with no refund. OceanHackWeek organizers may take action to redress anything designed to, or with the clear impact of, disrupting the event or making the environment hostile for any participants. We expect participants to follow these rules at all the event venues and event-related social activities.","title":"Code of Conduct"},{"location":"conduct/#reporting-a-violation","text":"Harassment and other code of conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here . This anti-harassment policy is based on the example policy from the Geek Feminism wiki, created by the Ada Initiative and other volunteers.","title":"Reporting a violation"},{"location":"conduct/#group-discussion","text":"Q: What can each of us do to make OceanHackWeek an optimal learning environment that is inclusive and welcoming for everyone? Give people room to express themselves, helping them achieve what they want to achieve this week Be helpful and spend some time jumping start someone with coding. Open to new ideas and ways of approaching a problem, being approachable Organizers are also here to learn from others and certainly don\u2019t have all the answers! Be cognizant of different locations and time zones, engagement levels Allow and encourage different ways to engage, not just need to engage via video - like this google doc! Don\u2019t use language like \u201cobviously\u201d or \u201cclearly\u201d (don\u2019t assume something is easy for others) Ask questions, all the questions. Cameras on, so people can see that you\u2019re engaged Build bridges between all three groups by reaching out to virtual/in-person participants Making sure everyone is working from a common knowledge baseline Listen actively and pay attention +1) Creating specific times/spaces for individuals to bring up questions/concerns - helps shy folks get a chance to communicate Specifically ask folks who are quieter if they would like to contribute (but don\u2019t pressure them) Listening and adjusting behaviour if someone expresses discomfort about a behaviour Letting others know if you are uncomfortable-- especially the person causing you the discomfort if it feels safe to do so Patient and understanding that everyone from different backgrounds and experiences Communicating in open spaces like slack channels so that others can follow or join Be patient with technological problems Using we language instead of you or I esp when learning on Project teams together Being a good listener and making space for others to speak their mind or answer questions especially if I\u2019ve been the one talking Using inclusive language to make sure that we aren\u2019t inadvertently accusing or attacking anyone Smile and show a bit of patience.","title":"Group discussion"},{"location":"numpy/","text":"Intro to Numpy This lesson provides an introduction to numpy. list learning objectives Reading Assignment (optional) (15 minutes) If you are a beginner Python programmer making the transition from Matlab, read this article . Practical Assignment (30 minutes) Work through this Introduction to Numpy .","title":"Intro to Numpy"},{"location":"numpy/#intro-to-numpy","text":"This lesson provides an introduction to numpy. list learning objectives","title":"Intro to Numpy"},{"location":"numpy/#reading-assignment-optional-15-minutes","text":"If you are a beginner Python programmer making the transition from Matlab, read this article .","title":"Reading Assignment (optional) (15 minutes)"},{"location":"numpy/#practical-assignment-30-minutes","text":"Work through this Introduction to Numpy .","title":"Practical Assignment (30 minutes)"},{"location":"pandas/","text":"Intro to Pandas This lesson provides an introduction to pandas. list learning objectives Practical Assignment (30 minutes) Work through this Introduction to Pandas .","title":"Intro to Pandas"},{"location":"pandas/#intro-to-pandas","text":"This lesson provides an introduction to pandas. list learning objectives","title":"Intro to Pandas"},{"location":"pandas/#practical-assignment-30-minutes","text":"Work through this Introduction to Pandas .","title":"Practical Assignment (30 minutes)"},{"location":"schedule/","text":"Schedule OceanHackWeek 2021 will take place August 3-6. Pre-hackweek OPTIONAL sessions will be on July 29-30 as a 1-hour session each day ( see below for details ). In-person participants will gather for full days, 9am - 5pm EDT. While virtual participants may choose to engage primarily with this group and schedule via Zoom and Slack, we strongly encourage you to join the program designed specifically as a virtual event. The virtual event will be split into two schedules and groups based on the distribution of participant time zones, in a 3-hour daily block of formal, live activities. The larger virtual event will take place 11:00am - 2:00pm PDT / 18:00 - 21:00 UTC, except the first day when we will start 30 minutes earlier . The \u201cOceania\u201d virtual event is intended to accommodate participants from Australia to India and will take place 12:00pm - 3:00pm AEST / 2:00 - 5:00 UTC. You will be asked to choose between the two virtual groups. Tutorials covering data science topics will be live streamed and viewed at the same time by the in-person and main virtual events, at the times listed in the schedule below under Main Virtual Event . Zoom links will be posted posted on the #ohw21-announcements Slack channel. Pre-hackweek OPTIONAL check-ins All times listed below are in PDT (UTC-7) unless otherwise noted. You can find your timezone offset at https://www.timeanddate.com or similar sites. Thursday (July 29) Time Event Leads 3:00PM - 4:00PM PDT Check-in, ask us anything Start times in other timezones: 6:00pm EDT / 22:00 UTC / 8:00am AEST (+1 day) Thomas Moore Emilio Mayorga Friday (July 30) Time Event Leads 8:00AM - 9:00AM PDT Check-in, ask us anything Start times in other timezones: 11:00am EDT / 15:00 UTC / 1:00am AEST (+1 day) Matthew Biddle Alex Kerney Emilio Mayorga In-person event at Bigelow Laboratory for Ocean Sciences All times listed below for the in-person event are in EDT (UTC-4) . You can find your timezone offset at https://www.timeanddate.com or similar sites. In-person participants will gather 9am - 5pm EDT. Tuesday (August 3) Time Event Instructors/Leads 9:00AM - 9:30AM EDT Welcome and Opening TBD 9:30AM - 10:15AM EDT Connecting Participant introductions icebreaker activity 10:15AM - 10:30AM EDT Break 10:30AM - 11:15AM EDT Project brainstorming TBD 11:15AM - 12:00PM EDT Git and JupyterHub TBD 12:00PM - 1:30PM EDT Lunch 1:30PM - 5:00PM EDT Join Main Virtual Event See the Main Virtual Event detailed schedule below (note those times are PDT) Wednesday (August 4) Time Event Instructors/Leads 9:00AM - 12:00PM EDT Project work 12:00PM - 1:00PM EDT Lunch 1:00PM - 2:00PM EDT Project work 2:00PM - 5:00PM EDT Join Main Virtual Event See the Main Virtual Event detailed schedule below (note those times are PDT) Thursday (August 5) Time Event Instructors/Leads 9:00AM - 12:00PM EDT Project work 12:00PM - 1:00PM EDT Lunch 1:00PM - 2:00PM EDT Project work 2:00PM - 5:00PM EDT Join Main Virtual Event See the Main Virtual Event detailed schedule below (note those times are PDT) Friday (August 6) Time Event Instructors/Leads 9:00AM - 12:00PM EDT Project work 12:00PM - 1:00PM EDT Lunch 1:00PM - 2:00PM EDT Project work 2:00PM - 5:00PM EDT Join Main Virtual Event See the Main Virtual Event detailed schedule below (note those times are PDT) Main Virtual event All times listed below for the main virtual event are in PDT (UTC-7) . You can find your timezone offset at https://www.timeanddate.com or similar sites. Tuesday (August 3) Time Event Instructors/Leads 10:30AM - 11:00AM PDT Welcome and Opening Note 10:30am start time! Emilio Mayorga Wu-Jung Lee 11:00AM - 11:30AM PDT Connecting Participant introductions icebreaker activity 11:30AM - 12:15PM PDT Tutorial: Xarray Working with labelled multi-dimensional arrays in Python Jupyter notebook \u2014 video Julius Busecke 12:15PM - 12:30PM PDT Break 12:30PM - 1:15PM PDT Tutorial: Data access Searching and obtaining ocean data from multiple sources Jupyter notebooks \u2014 video Filipe Fernandes 1:15PM - 1:30PM PDT Break 1:30PM - 2:00PM PDT Project setup and pitch Nick Record Wu-Jung Lee Wednesday (August 4) Time Event Instructors/Leads 11:00AM - 11:30AM PDT Project check-in and orientation Nick Record Wu-Jung Lee 11:30AM - 12:15PM PDT R oce package for processing and visualizing ocean data R Markdown \u2014 video Clark Richards 12:15PM - 12:30PM PDT Break 12:30PM - 1:30PM PDT Data visualization in Python Jupyter notebooks \u2014 video Aimee Barciauskas 1:30PM - 2:00PM PDT Project work and helpdesk Everyone Thursday (August 5) Time Event Instructors/Leads 11:00AM - 11:45AM PDT Neural networks in R Presentation and R Jupyter notebooks \u2014 video Johnathan Evanilla 11:45AM - 12:30PM PDT Reproducible Science & Data Management Slides \u2014 video Mathew Biddle 12:30PM - 12:45PM PDT Break 12:45PM - 2:00PM PDT Project work and helpdesk Everyone Friday (August 6) Time Event Instructors/Leads 11:00AM - 11:05AM PDT Introduction and guidance for the last day Wu-Jung Lee 11:05AM - 11:30AM PDT Groups finalize projects Everyone 11:30AM - 12:15PM PDT Project presentations I Everyone 12:15PM - 12:30PM PDT Break 12:30PM - 1:00PM PDT Project presentations II Everyone 1:00PM - 1:15PM PDT Break 1:15PM - 2:00PM PDT Final gathering What next? OceanHackWeek after this week Derya Gumustel Alex Kerney Emilio Mayorga Everyone Virtual Oceania event All times listed below for the main virtual event are in AEST (UTC+10) . You can find your timezone offset at https://www.timeanddate.com or similar sites. The \u201cOceania\u201d virtual event is intended to accommodate participants from Australia to India and will take place 12:00pm - 3:00pm AEST / 2:00 - 5:00 UTC. Tuesday (August 3) Time Event Instructors/Leads 12:00PM - 12:30PM AEST Welcome and Opening - Paige Martin 12:30PM - 1:00PM AEST Connecting Participant introductions icebreaker activity 1:00PM - 1:30PM AEST Schedule discussion & questions - Thomas Moore Paige Martin 1:30PM - 1:45PM AEST Break 1:45PM - 3:00PM AEST Projects discussion & more questions - Thomas Moore Paige Martin Nick Mortimer Wednesday (August 4) Time Event Instructors/Leads 12:00PM - 12:30PM AEST Short presentation, project formation, & questions Nick Mortimer Paige & Thomas 12:30PM - 2:30PM AEST Project time Oceania based projects work in sync (include some opportunistic breaks) 2:30PM - 3:00PM AEST Project reports Thursday (August 5) Time Event Instructors/Leads 12:00PM - 2:30PM AEST Project time Oceania based projects work in sync (include some opportunistic breaks) 2:30PM - 3:00PM AEST Project reports Friday (August 6) Time Event Instructors/Leads 12:00PM - 12:30PM AEST Project reports, discussion, & questions 12:30PM - 3:00PM AEST Project time Oceania based projects work in sync (include some opportunistic breaks) 3:00PM - 4:00PM AEST Project presentations & conclusion (recorded)","title":"Schedule"},{"location":"schedule/#schedule","text":"OceanHackWeek 2021 will take place August 3-6. Pre-hackweek OPTIONAL sessions will be on July 29-30 as a 1-hour session each day ( see below for details ). In-person participants will gather for full days, 9am - 5pm EDT. While virtual participants may choose to engage primarily with this group and schedule via Zoom and Slack, we strongly encourage you to join the program designed specifically as a virtual event. The virtual event will be split into two schedules and groups based on the distribution of participant time zones, in a 3-hour daily block of formal, live activities. The larger virtual event will take place 11:00am - 2:00pm PDT / 18:00 - 21:00 UTC, except the first day when we will start 30 minutes earlier . The \u201cOceania\u201d virtual event is intended to accommodate participants from Australia to India and will take place 12:00pm - 3:00pm AEST / 2:00 - 5:00 UTC. You will be asked to choose between the two virtual groups. Tutorials covering data science topics will be live streamed and viewed at the same time by the in-person and main virtual events, at the times listed in the schedule below under Main Virtual Event . Zoom links will be posted posted on the #ohw21-announcements Slack channel.","title":"Schedule"},{"location":"schedule/#pre-hackweek-optional-check-ins","text":"All times listed below are in PDT (UTC-7) unless otherwise noted. You can find your timezone offset at https://www.timeanddate.com or similar sites.","title":"Pre-hackweek OPTIONAL check-ins"},{"location":"schedule/#thursday-july-29","text":"Time Event Leads 3:00PM - 4:00PM PDT Check-in, ask us anything Start times in other timezones: 6:00pm EDT / 22:00 UTC / 8:00am AEST (+1 day) Thomas Moore Emilio Mayorga","title":"Thursday (July 29)"},{"location":"schedule/#friday-july-30","text":"Time Event Leads 8:00AM - 9:00AM PDT Check-in, ask us anything Start times in other timezones: 11:00am EDT / 15:00 UTC / 1:00am AEST (+1 day) Matthew Biddle Alex Kerney Emilio Mayorga","title":"Friday (July 30)"},{"location":"schedule/#in-person-event-at-bigelow-laboratory-for-ocean-sciences","text":"All times listed below for the in-person event are in EDT (UTC-4) . You can find your timezone offset at https://www.timeanddate.com or similar sites. In-person participants will gather 9am - 5pm EDT.","title":"In-person event at Bigelow Laboratory for Ocean Sciences"},{"location":"schedule/#tuesday-august-3","text":"Time Event Instructors/Leads 9:00AM - 9:30AM EDT Welcome and Opening TBD 9:30AM - 10:15AM EDT Connecting Participant introductions icebreaker activity 10:15AM - 10:30AM EDT Break 10:30AM - 11:15AM EDT Project brainstorming TBD 11:15AM - 12:00PM EDT Git and JupyterHub TBD 12:00PM - 1:30PM EDT Lunch 1:30PM - 5:00PM EDT Join Main Virtual Event See the Main Virtual Event detailed schedule below (note those times are PDT)","title":"Tuesday (August 3)"},{"location":"schedule/#wednesday-august-4","text":"Time Event Instructors/Leads 9:00AM - 12:00PM EDT Project work 12:00PM - 1:00PM EDT Lunch 1:00PM - 2:00PM EDT Project work 2:00PM - 5:00PM EDT Join Main Virtual Event See the Main Virtual Event detailed schedule below (note those times are PDT)","title":"Wednesday (August 4)"},{"location":"schedule/#thursday-august-5","text":"Time Event Instructors/Leads 9:00AM - 12:00PM EDT Project work 12:00PM - 1:00PM EDT Lunch 1:00PM - 2:00PM EDT Project work 2:00PM - 5:00PM EDT Join Main Virtual Event See the Main Virtual Event detailed schedule below (note those times are PDT)","title":"Thursday (August 5)"},{"location":"schedule/#friday-august-6","text":"Time Event Instructors/Leads 9:00AM - 12:00PM EDT Project work 12:00PM - 1:00PM EDT Lunch 1:00PM - 2:00PM EDT Project work 2:00PM - 5:00PM EDT Join Main Virtual Event See the Main Virtual Event detailed schedule below (note those times are PDT)","title":"Friday (August 6)"},{"location":"schedule/#main-virtual-event","text":"All times listed below for the main virtual event are in PDT (UTC-7) . You can find your timezone offset at https://www.timeanddate.com or similar sites.","title":"Main Virtual event"},{"location":"schedule/#tuesday-august-3_1","text":"Time Event Instructors/Leads 10:30AM - 11:00AM PDT Welcome and Opening Note 10:30am start time! Emilio Mayorga Wu-Jung Lee 11:00AM - 11:30AM PDT Connecting Participant introductions icebreaker activity 11:30AM - 12:15PM PDT Tutorial: Xarray Working with labelled multi-dimensional arrays in Python Jupyter notebook \u2014 video Julius Busecke 12:15PM - 12:30PM PDT Break 12:30PM - 1:15PM PDT Tutorial: Data access Searching and obtaining ocean data from multiple sources Jupyter notebooks \u2014 video Filipe Fernandes 1:15PM - 1:30PM PDT Break 1:30PM - 2:00PM PDT Project setup and pitch Nick Record Wu-Jung Lee","title":"Tuesday (August 3)"},{"location":"schedule/#wednesday-august-4_1","text":"Time Event Instructors/Leads 11:00AM - 11:30AM PDT Project check-in and orientation Nick Record Wu-Jung Lee 11:30AM - 12:15PM PDT R oce package for processing and visualizing ocean data R Markdown \u2014 video Clark Richards 12:15PM - 12:30PM PDT Break 12:30PM - 1:30PM PDT Data visualization in Python Jupyter notebooks \u2014 video Aimee Barciauskas 1:30PM - 2:00PM PDT Project work and helpdesk Everyone","title":"Wednesday (August 4)"},{"location":"schedule/#thursday-august-5_1","text":"Time Event Instructors/Leads 11:00AM - 11:45AM PDT Neural networks in R Presentation and R Jupyter notebooks \u2014 video Johnathan Evanilla 11:45AM - 12:30PM PDT Reproducible Science & Data Management Slides \u2014 video Mathew Biddle 12:30PM - 12:45PM PDT Break 12:45PM - 2:00PM PDT Project work and helpdesk Everyone","title":"Thursday (August 5)"},{"location":"schedule/#friday-august-6_1","text":"Time Event Instructors/Leads 11:00AM - 11:05AM PDT Introduction and guidance for the last day Wu-Jung Lee 11:05AM - 11:30AM PDT Groups finalize projects Everyone 11:30AM - 12:15PM PDT Project presentations I Everyone 12:15PM - 12:30PM PDT Break 12:30PM - 1:00PM PDT Project presentations II Everyone 1:00PM - 1:15PM PDT Break 1:15PM - 2:00PM PDT Final gathering What next? OceanHackWeek after this week Derya Gumustel Alex Kerney Emilio Mayorga Everyone","title":"Friday (August 6)"},{"location":"schedule/#virtual-oceania-event","text":"All times listed below for the main virtual event are in AEST (UTC+10) . You can find your timezone offset at https://www.timeanddate.com or similar sites. The \u201cOceania\u201d virtual event is intended to accommodate participants from Australia to India and will take place 12:00pm - 3:00pm AEST / 2:00 - 5:00 UTC.","title":"Virtual Oceania event"},{"location":"schedule/#tuesday-august-3_2","text":"Time Event Instructors/Leads 12:00PM - 12:30PM AEST Welcome and Opening - Paige Martin 12:30PM - 1:00PM AEST Connecting Participant introductions icebreaker activity 1:00PM - 1:30PM AEST Schedule discussion & questions - Thomas Moore Paige Martin 1:30PM - 1:45PM AEST Break 1:45PM - 3:00PM AEST Projects discussion & more questions - Thomas Moore Paige Martin Nick Mortimer","title":"Tuesday (August 3)"},{"location":"schedule/#wednesday-august-4_2","text":"Time Event Instructors/Leads 12:00PM - 12:30PM AEST Short presentation, project formation, & questions Nick Mortimer Paige & Thomas 12:30PM - 2:30PM AEST Project time Oceania based projects work in sync (include some opportunistic breaks) 2:30PM - 3:00PM AEST Project reports","title":"Wednesday (August 4)"},{"location":"schedule/#thursday-august-5_2","text":"Time Event Instructors/Leads 12:00PM - 2:30PM AEST Project time Oceania based projects work in sync (include some opportunistic breaks) 2:30PM - 3:00PM AEST Project reports","title":"Thursday (August 5)"},{"location":"schedule/#friday-august-6_2","text":"Time Event Instructors/Leads 12:00PM - 12:30PM AEST Project reports, discussion, & questions 12:30PM - 3:00PM AEST Project time Oceania based projects work in sync (include some opportunistic breaks) 3:00PM - 4:00PM AEST Project presentations & conclusion (recorded)","title":"Friday (August 6)"},{"location":"logistics/coffeebreaks/","text":"OHW21 Global Rolling Social/Coffee Breaks After we get this hackweek kicked-off and project teams formed we will start inviting you to come hangout and meet others across the globe in our virtual break space . Breaks will be announced every 3-hours and will last for 15-minutes, but of course you can stay longer. In fact, the space is yours to use for the entire hackweek for any purposes including meeting with your project team. The space is open starting now, July 30 until soon after OHW21 ends. We will be using the web-based platform from Wonder.me . The supported browsers are Google Chrome & Microsoft Edge, & Firefox works equally as well. Sometimes Linux has issues, but we have seen it work. You may need to fiddle to get the microphone or camera to work if you have multiple ones connected. It will not work on devices like ipads/smart phone/etc. Alas, not perfect, but kinda fun. When you click on the Wonder Room link you will be asked for permission to use your camera and microphone and to take a selfie with your computer to use for your avatar. Don\u2019t over think the picture, it\u2019s less scary walking up to someone with a picture vs initials. You will be dropped in the space where you can roam about freely between people/pods. As soon as your avatar is near another avatar, your audio/visuals will activate, and you will be able to see and hear only the people close by. It will deactivate when you move apart. Point and click your mouse to navigate and bump into others. More information about our global breaks will come when we get them started but for now feel free to test and checkout the space. Right now, the space is a coffee shop in Brooklyn NY. Hosting a Coffee Break We intend to have at least one OHW21 organizer or helper serving in the good host role for each coffee break AND we won't stop any of you if you feel that you would like to help us host/create a warm & welcoming environment in which we can get to know each other. Our hunch is that the more of us that take on hosting by creating a super inviting space, the more likely it will be that some of us will have one of those serendipitous encounters that people refer to when asked \u201cHow did you ever come up with the idea to \u2026.?\u201d What this looks like in practice is making sure everyone that joins the space is greeted, can get their A/V working, and understands how to use their mouse to navigate around. If you have issues with the A/V don\u2019t hesitate to ask for help in Slack. Chances are that someone has worked it out. And finally, everyone can be a great host by just making space for others to join your circle and pausing an ongoing conversation long enough to say hello and make introductions. Coffee breaks are a great place to get questions answered about the hackweek!","title":"Coffee Breaks"},{"location":"logistics/coffeebreaks/#ohw21-global-rolling-socialcoffee-breaks","text":"After we get this hackweek kicked-off and project teams formed we will start inviting you to come hangout and meet others across the globe in our virtual break space . Breaks will be announced every 3-hours and will last for 15-minutes, but of course you can stay longer. In fact, the space is yours to use for the entire hackweek for any purposes including meeting with your project team. The space is open starting now, July 30 until soon after OHW21 ends. We will be using the web-based platform from Wonder.me . The supported browsers are Google Chrome & Microsoft Edge, & Firefox works equally as well. Sometimes Linux has issues, but we have seen it work. You may need to fiddle to get the microphone or camera to work if you have multiple ones connected. It will not work on devices like ipads/smart phone/etc. Alas, not perfect, but kinda fun. When you click on the Wonder Room link you will be asked for permission to use your camera and microphone and to take a selfie with your computer to use for your avatar. Don\u2019t over think the picture, it\u2019s less scary walking up to someone with a picture vs initials. You will be dropped in the space where you can roam about freely between people/pods. As soon as your avatar is near another avatar, your audio/visuals will activate, and you will be able to see and hear only the people close by. It will deactivate when you move apart. Point and click your mouse to navigate and bump into others. More information about our global breaks will come when we get them started but for now feel free to test and checkout the space. Right now, the space is a coffee shop in Brooklyn NY.","title":"OHW21 Global Rolling Social/Coffee Breaks"},{"location":"logistics/coffeebreaks/#hosting-a-coffee-break","text":"We intend to have at least one OHW21 organizer or helper serving in the good host role for each coffee break AND we won't stop any of you if you feel that you would like to help us host/create a warm & welcoming environment in which we can get to know each other. Our hunch is that the more of us that take on hosting by creating a super inviting space, the more likely it will be that some of us will have one of those serendipitous encounters that people refer to when asked \u201cHow did you ever come up with the idea to \u2026.?\u201d What this looks like in practice is making sure everyone that joins the space is greeted, can get their A/V working, and understands how to use their mouse to navigate around. If you have issues with the A/V don\u2019t hesitate to ask for help in Slack. Chances are that someone has worked it out. And finally, everyone can be a great host by just making space for others to join your circle and pausing an ongoing conversation long enough to say hello and make introductions. Coffee breaks are a great place to get questions answered about the hackweek!","title":"Hosting a Coffee Break"},{"location":"logistics/getting_help/","text":"Getting Help We know how overwhelming all of this information can be. Here are some tips for asking questions and figuring out where to turn for help. You can ask anything on the Slack #ohw21-general channel, any time. Organizers and helpers are monitoring this channel, and some of your fellow hackweek participants may be able to help you! Also, feel free to send a direct message on Slack to any of the organizers or helpers. Helpdesk We've set up the #ohw21-helpdesk Slack channel to ask technical questions (or other types of questions, if you'd like). We've also set up some helpdesk Slack user groups that you can use to tag your question as, say, about Python. These groups are listed and described below. You are also welcome to direct message the helpers if you don't feel comfortable asking questions publicly. Type one of the handles below along with your question in a Slack message to tag the folks that can help you. @help-infrastructure : For help with logistical items. Members include Alex Kerney, Filipe Fernandes, and Paige Martin. @help-python : For help with all things Python related. Members include Alex Kerney, Derya Gumustel, Emilio Mayorga, and Wu-Jung Lee. @help-r : For help with all things R related. Members include Nick Record, Rene Francolini, and Ben Tupper. You can view user groups and members on Slack by clicking on 'More' near the top of the Slack navigation menu, and then selecting 'People & user groups' and navigating to the 'User groups' tab; the keyboard shortcut to get to the 'People & user groups' page from any channel is Ctrl+Shift+E. During tutorials Ask questions on Slack! Use the #ohw21-tutorials channel to ask questions or check out answers to questions others have posed. We will use this same channel every day. Several of us will be monitoring this channel and addressing your questions throughout the tutorials Vote up questions from others to help the moderators prioritize which questions to ask the speaker during tutorials. Tutorial moderators will mark questions that are best answered by the instructor and ask helpers (and anyone else!) to answer the rest in real time. Then when the instructor ask if there are questions the moderators will read those reserved for the instructor. Zoom Chat will not be available. Ask on Slack! You will be muted at the start of the tutorial presentation. The moderator will review questions on Slack and ask the questions to the instructor during Q&A time. Projects See the Projects Getting Started page . Feel free to post a question on the #ohw21_project channel, too. Reporting a Code of Conduct violation Harassment and other Code of Conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here .","title":"Getting Help"},{"location":"logistics/getting_help/#getting-help","text":"We know how overwhelming all of this information can be. Here are some tips for asking questions and figuring out where to turn for help. You can ask anything on the Slack #ohw21-general channel, any time. Organizers and helpers are monitoring this channel, and some of your fellow hackweek participants may be able to help you! Also, feel free to send a direct message on Slack to any of the organizers or helpers.","title":"Getting Help"},{"location":"logistics/getting_help/#helpdesk","text":"We've set up the #ohw21-helpdesk Slack channel to ask technical questions (or other types of questions, if you'd like). We've also set up some helpdesk Slack user groups that you can use to tag your question as, say, about Python. These groups are listed and described below. You are also welcome to direct message the helpers if you don't feel comfortable asking questions publicly. Type one of the handles below along with your question in a Slack message to tag the folks that can help you. @help-infrastructure : For help with logistical items. Members include Alex Kerney, Filipe Fernandes, and Paige Martin. @help-python : For help with all things Python related. Members include Alex Kerney, Derya Gumustel, Emilio Mayorga, and Wu-Jung Lee. @help-r : For help with all things R related. Members include Nick Record, Rene Francolini, and Ben Tupper. You can view user groups and members on Slack by clicking on 'More' near the top of the Slack navigation menu, and then selecting 'People & user groups' and navigating to the 'User groups' tab; the keyboard shortcut to get to the 'People & user groups' page from any channel is Ctrl+Shift+E.","title":"Helpdesk"},{"location":"logistics/getting_help/#during-tutorials","text":"Ask questions on Slack! Use the #ohw21-tutorials channel to ask questions or check out answers to questions others have posed. We will use this same channel every day. Several of us will be monitoring this channel and addressing your questions throughout the tutorials Vote up questions from others to help the moderators prioritize which questions to ask the speaker during tutorials. Tutorial moderators will mark questions that are best answered by the instructor and ask helpers (and anyone else!) to answer the rest in real time. Then when the instructor ask if there are questions the moderators will read those reserved for the instructor. Zoom Chat will not be available. Ask on Slack! You will be muted at the start of the tutorial presentation. The moderator will review questions on Slack and ask the questions to the instructor during Q&A time.","title":"During tutorials"},{"location":"logistics/getting_help/#projects","text":"See the Projects Getting Started page . Feel free to post a question on the #ohw21_project channel, too.","title":"Projects"},{"location":"logistics/getting_help/#reporting-a-code-of-conduct-violation","text":"Harassment and other Code of Conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here .","title":"Reporting a Code of Conduct violation"},{"location":"logistics/overview/","text":"Logistics Overview Some of you will participate in person at the Bigelow Laboratory for Ocean Sciences in Maine (US), and others will participate virtually from time zones all over the world. As we have learned throughout the pandemic, each of these gathering styles has strengths and weaknesses. We are committed to providing an engaging and full experience for everyone and will strive to facilitate cross communication and collaboration across all participants. Time OceanHackWeek 2021 will take place August 3-6. Pre-hackweek OPTIONAL sessions will be on July 29-30 as a 1-hour session each day. In-person participants will gather for full days, 9am - 5pm EDT. While virtual participants may choose to engage primarily with this group and schedule via Zoom and Slack, we strongly encourage you to join the program designed specifically as a virtual event. The virtual event will be split into two schedules and groups based on the distribution of participant time zones, in a 3-hour daily block of formal, live activities. The larger virtual event will take place 11:00am - 2:00pm PDT / 18:00 - 21:00 UTC, except the first day when we will start 30 minutes earlier . The \u201cOceania\u201d virtual event is intended to accommodate participants from Australia to India and will take place 12:00pm - 3:00pm AEST / 2:00 - 5:00 UTC. You will be asked to choose between the two virtual groups. Detailed schedules are available Schedule page . Channel of communication: Slack We will use the OceanHackWeek Slack workspace as the main channel of communication before, during, and after the hackweek. You should have received an invitation to join this workspace. If you haven't seen it in your inbox, check your spam folder, or email us at oceanhkw@uw.edu . Go directly from a channel or direct message chat into a voice or video chat , with screen-sharing capability. This will be particularly useful during hack project time. OHW JupyterHub (\"The Hub\") and GitHub OHW JupyterHub (\"The Hub\"): https://ohw.pilot.2i2c.cloud OHW GitHub organization: https://github.com/oceanhackweek Tutorials broadcasting We will use Zoom to broadcast all tutorials. The Zoom link will be distributed via Slack. Hack projects See Project overview and Hacking at OHW21 for more info. Getting Help See the Getting Help page for guidance and links to have your questions answered or connect with organizers with concerns.","title":"Logistics Overview"},{"location":"logistics/overview/#logistics-overview","text":"Some of you will participate in person at the Bigelow Laboratory for Ocean Sciences in Maine (US), and others will participate virtually from time zones all over the world. As we have learned throughout the pandemic, each of these gathering styles has strengths and weaknesses. We are committed to providing an engaging and full experience for everyone and will strive to facilitate cross communication and collaboration across all participants.","title":"Logistics Overview"},{"location":"logistics/overview/#time","text":"OceanHackWeek 2021 will take place August 3-6. Pre-hackweek OPTIONAL sessions will be on July 29-30 as a 1-hour session each day. In-person participants will gather for full days, 9am - 5pm EDT. While virtual participants may choose to engage primarily with this group and schedule via Zoom and Slack, we strongly encourage you to join the program designed specifically as a virtual event. The virtual event will be split into two schedules and groups based on the distribution of participant time zones, in a 3-hour daily block of formal, live activities. The larger virtual event will take place 11:00am - 2:00pm PDT / 18:00 - 21:00 UTC, except the first day when we will start 30 minutes earlier . The \u201cOceania\u201d virtual event is intended to accommodate participants from Australia to India and will take place 12:00pm - 3:00pm AEST / 2:00 - 5:00 UTC. You will be asked to choose between the two virtual groups. Detailed schedules are available Schedule page .","title":"Time"},{"location":"logistics/overview/#channel-of-communication-slack","text":"We will use the OceanHackWeek Slack workspace as the main channel of communication before, during, and after the hackweek. You should have received an invitation to join this workspace. If you haven't seen it in your inbox, check your spam folder, or email us at oceanhkw@uw.edu . Go directly from a channel or direct message chat into a voice or video chat , with screen-sharing capability. This will be particularly useful during hack project time.","title":"Channel of communication: Slack"},{"location":"logistics/overview/#ohw-jupyterhub-the-hub-and-github","text":"OHW JupyterHub (\"The Hub\"): https://ohw.pilot.2i2c.cloud OHW GitHub organization: https://github.com/oceanhackweek","title":"OHW JupyterHub (\"The Hub\") and GitHub"},{"location":"logistics/overview/#tutorials-broadcasting","text":"We will use Zoom to broadcast all tutorials. The Zoom link will be distributed via Slack.","title":"Tutorials broadcasting"},{"location":"logistics/overview/#hack-projects","text":"See Project overview and Hacking at OHW21 for more info.","title":"Hack projects"},{"location":"logistics/overview/#getting-help","text":"See the Getting Help page for guidance and links to have your questions answered or connect with organizers with concerns.","title":"Getting Help"},{"location":"prep/conda/","text":"Conda, Python and R Python and R learning resources While we anticipate that most participants will have some experience with Python and/or R programming, we understand that everyone joining OceanHackWeek is coming from a different background and skill level in programming. Below are links to a few resources to refresh your skills in Python and R, as well as a tutorial video from a previous OHW event that covers a handful of Python packages. The material covered in these lessons is a good reflection of the level we expect participants to be at and should get you up-to-date on the basic programming skills needed for the workshop. Plotting and Programming in Python - This lesson is an introduction to programming in Python for people with little or no previous programming experience. Programming with Python - This Python lesson teaches data analysis using a case study of inflammation in patients who have been given a new treatment for arthritis. R for Reproducible Scientific Analysis - R is commonly used in many scientific disciplines for statistical analysis. This lesson teaches novice programmers to write modular code and covers best practices for using R for data analysis. Oceanhackweek 2020 recording: Jupyter, NumPy, Pandas, and Matplotlib - As a part of OceanHackWeek 2020, Leticia Portella gave a pre-hackweek tutorial on Jupyter, NumPy, Pandas, and Matplotlib. The Jupyter notebooks are found here . Conda and installing Python and R environments Overview The Hub is pre-configured with a customized \"environment\" of Python and R packages designed to run all the tutorial notebooks, and supporting a broad range of oceanographic applications. This environment is created and managed using the open-source Conda package and environment management system for installing multiple versions of software packages together with their dependencies, and convenient switching between environments. What is Conda? Conda is an open source package and environment management system for any programming languages, but very popular among the Python community, Conda runs on Windows, macOS, and Linux: \"Conda quickly installs, runs, and updates packages and their dependencies. Conda easily creates, saves, loads, and switches between environments on your local computer. It was created for Python programs but it can package and distribute software for any language.\" For Python, the advantage of conda compared to pip is that it has a built in environment management system as well as the management of binaries, and non-Python dependencies. Conda on the JupyterHub The JupyterHub has both a pre-configured base environment, and environments that you create and manage yourself. JupyterHub base environment The Conda environment for the base JupyterHub environment is defined in oceanhackweek/jupyter-image . This image contains hopefully everything you will need for the tutorials and for general exploration. The environment.yml captures the current state of the OceanHackWeek environment. You can explore this file to see what packages we have selected to come in the base environment. # environment.yml name: OHW channels: - conda-forge dependencies: - python=3.9 - pangeo-notebook=2021.07.24 - argopy - bokeh - bottleneck - cartopy - cdsapi - cf-units - cf_xarray - cmip6_preprocessing - cmocean - colorcet - compilers - compliance-checker - conda-lock # ... oh so many more packages that we are not going to include them all here It also contains a lot of supporting infrastructure for running each individual's JupyterLab server (for instance compilers and conda-lock in just that small subset), so we suggest building up an environment from scratch, rather than by trimming down the base environment. The exact state of the Conda environment is captured in conda-linux-64.lock , which will also include lots of packages that we didn't explicitly select, but are needed dependencies of those we did. There are also a handful of dependencies that are installed directly in the Docker image , like RStudio, and the Bigelow Labs R libraries ( ohwobpg and rasf ). Temporary packages You can temporarily add packages to your hub, via Jupyter cell magic, %pip install <list-of-packages> or %conda install <list-of-packages> . In R you can use install.packages(\"package-name\") as usual. Warning For those who know their way around Jupyter, you may be tempted to !pip install <list-of-packages> . This can leave your environment in an inconsistent state, which may prevent your server from starting (and will require some heavy duty assistance from @help-infrastructure to debug). More information is available here. Create your own environment on JupyterHub To create your own Conda environment on JupyterHub, you can launch the terminal and run conda create commands as expected. Be sure to specify -n <environment-name> . For a Python environment: conda create -n cool-project -c conda-forge python=3.9 xarray ipykernel Once you've created an environment, you can run conda activate cool-project as usual for access to the environment in the terminal. Additionally the environment will become available as a notebook environment if you install ipykernel for Python or irkernel for R. Info It may take a minute or two for JupyterLab to show your new Conda environment. The package that detects additional environments doesn't run constantly, so give it a second before worrying that you created an environment wrong. Conda on your own computer Conda may be used on your computer as well as the Hub. If you wish to install the same environment as the hub is running, after you install Conda, you can download the environment.yml that we use, then conda create -n <ENV NAME> --file environment.yml Installing Conda There are a few different ways to install conda: The Anaconda Individual Edition which comes with a large pre-packaged environment, and a snazzy management interface to help explore what packages are available and what environments you have installed. Miniconda is a stripped down version with just the installer, which is really for kick starting other environments. There is also Mamba which is a newer take on Conda that tends to be faster, though it's still under heavy development (and it's what we're actually using). We recommend the use of Miniconda.","title":"Conda, Python, R"},{"location":"prep/conda/#conda-python-and-r","text":"","title":"Conda, Python and R"},{"location":"prep/conda/#python-and-r-learning-resources","text":"While we anticipate that most participants will have some experience with Python and/or R programming, we understand that everyone joining OceanHackWeek is coming from a different background and skill level in programming. Below are links to a few resources to refresh your skills in Python and R, as well as a tutorial video from a previous OHW event that covers a handful of Python packages. The material covered in these lessons is a good reflection of the level we expect participants to be at and should get you up-to-date on the basic programming skills needed for the workshop. Plotting and Programming in Python - This lesson is an introduction to programming in Python for people with little or no previous programming experience. Programming with Python - This Python lesson teaches data analysis using a case study of inflammation in patients who have been given a new treatment for arthritis. R for Reproducible Scientific Analysis - R is commonly used in many scientific disciplines for statistical analysis. This lesson teaches novice programmers to write modular code and covers best practices for using R for data analysis. Oceanhackweek 2020 recording: Jupyter, NumPy, Pandas, and Matplotlib - As a part of OceanHackWeek 2020, Leticia Portella gave a pre-hackweek tutorial on Jupyter, NumPy, Pandas, and Matplotlib. The Jupyter notebooks are found here .","title":"Python and R learning resources"},{"location":"prep/conda/#conda-and-installing-python-and-r-environments","text":"","title":"Conda and installing Python and R environments"},{"location":"prep/conda/#overview","text":"The Hub is pre-configured with a customized \"environment\" of Python and R packages designed to run all the tutorial notebooks, and supporting a broad range of oceanographic applications. This environment is created and managed using the open-source Conda package and environment management system for installing multiple versions of software packages together with their dependencies, and convenient switching between environments.","title":"Overview"},{"location":"prep/conda/#what-is-conda","text":"Conda is an open source package and environment management system for any programming languages, but very popular among the Python community, Conda runs on Windows, macOS, and Linux: \"Conda quickly installs, runs, and updates packages and their dependencies. Conda easily creates, saves, loads, and switches between environments on your local computer. It was created for Python programs but it can package and distribute software for any language.\" For Python, the advantage of conda compared to pip is that it has a built in environment management system as well as the management of binaries, and non-Python dependencies.","title":"What is Conda?"},{"location":"prep/conda/#conda-on-the-jupyterhub","text":"The JupyterHub has both a pre-configured base environment, and environments that you create and manage yourself.","title":"Conda on the JupyterHub"},{"location":"prep/conda/#jupyterhub-base-environment","text":"The Conda environment for the base JupyterHub environment is defined in oceanhackweek/jupyter-image . This image contains hopefully everything you will need for the tutorials and for general exploration. The environment.yml captures the current state of the OceanHackWeek environment. You can explore this file to see what packages we have selected to come in the base environment. # environment.yml name: OHW channels: - conda-forge dependencies: - python=3.9 - pangeo-notebook=2021.07.24 - argopy - bokeh - bottleneck - cartopy - cdsapi - cf-units - cf_xarray - cmip6_preprocessing - cmocean - colorcet - compilers - compliance-checker - conda-lock # ... oh so many more packages that we are not going to include them all here It also contains a lot of supporting infrastructure for running each individual's JupyterLab server (for instance compilers and conda-lock in just that small subset), so we suggest building up an environment from scratch, rather than by trimming down the base environment. The exact state of the Conda environment is captured in conda-linux-64.lock , which will also include lots of packages that we didn't explicitly select, but are needed dependencies of those we did. There are also a handful of dependencies that are installed directly in the Docker image , like RStudio, and the Bigelow Labs R libraries ( ohwobpg and rasf ).","title":"JupyterHub base environment"},{"location":"prep/conda/#temporary-packages","text":"You can temporarily add packages to your hub, via Jupyter cell magic, %pip install <list-of-packages> or %conda install <list-of-packages> . In R you can use install.packages(\"package-name\") as usual. Warning For those who know their way around Jupyter, you may be tempted to !pip install <list-of-packages> . This can leave your environment in an inconsistent state, which may prevent your server from starting (and will require some heavy duty assistance from @help-infrastructure to debug). More information is available here.","title":"Temporary packages"},{"location":"prep/conda/#create-your-own-environment-on-jupyterhub","text":"To create your own Conda environment on JupyterHub, you can launch the terminal and run conda create commands as expected. Be sure to specify -n <environment-name> . For a Python environment: conda create -n cool-project -c conda-forge python=3.9 xarray ipykernel Once you've created an environment, you can run conda activate cool-project as usual for access to the environment in the terminal. Additionally the environment will become available as a notebook environment if you install ipykernel for Python or irkernel for R. Info It may take a minute or two for JupyterLab to show your new Conda environment. The package that detects additional environments doesn't run constantly, so give it a second before worrying that you created an environment wrong.","title":"Create your own environment on JupyterHub"},{"location":"prep/conda/#conda-on-your-own-computer","text":"Conda may be used on your computer as well as the Hub. If you wish to install the same environment as the hub is running, after you install Conda, you can download the environment.yml that we use, then conda create -n <ENV NAME> --file environment.yml","title":"Conda on your own computer"},{"location":"prep/conda/#installing-conda","text":"There are a few different ways to install conda: The Anaconda Individual Edition which comes with a large pre-packaged environment, and a snazzy management interface to help explore what packages are available and what environments you have installed. Miniconda is a stripped down version with just the installer, which is really for kick starting other environments. There is also Mamba which is a newer take on Conda that tends to be faster, though it's still under heavy development (and it's what we're actually using). We recommend the use of Miniconda.","title":"Installing Conda"},{"location":"prep/conda_original/","text":"Conda and installing Python and R environments Overview What is Conda? Conda is an open source package and environment management system for any programming languages, but very popular among python community, The Hub is pre-configured with a customized \"environment\" of Python and R packages designed to run all the tutorial notebooks, and supporting a broad range of oceanographic applications. This environment is created and managed using the open-source Conda package and environment management system for installing multiple versions of software packages together with their dependencies, and convenient switching between environments. Conda runs on Windows, macOS, and Linux: \"Conda quickly installs, runs, and updates packages and their dependencies. Conda easily creates, saves, loads, and switches between environments on your local computer. It was created for Python programs but it can package and distribute software for any language.\" Conda may be used on your computer as well as the Hub ... https://github.com/oceanhackweek/ohw20-tutorials/blob/master/environment.yml For Python, the advantage of conda compared to pip is that it has a built in environment management system as well as the management of binaries, and non-Python dependencies. You do not need administrative or root permissions to install conda if you select a user-writable installation location. In the previous lesson we showed you a cloud-based environment for our work during the hackweek. What happens after the event when you want to go home and work with all the libraries we showed you? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive. Python Software Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. Installing Miniconda Windows Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings. Linux and OSX You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes Installing Anaconda (Optional) NOTE: If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek. Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ... Installing Python We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the \"bash\" shell, if this is not already your default shell, you need to set it to be so (use the \"chsh -s /bin/bash\" command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands (/bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Conda and installing Python and R environments"},{"location":"prep/conda_original/#conda-and-installing-python-and-r-environments","text":"","title":"Conda and installing Python and R environments"},{"location":"prep/conda_original/#overview","text":"","title":"Overview"},{"location":"prep/conda_original/#what-is-conda","text":"Conda is an open source package and environment management system for any programming languages, but very popular among python community, The Hub is pre-configured with a customized \"environment\" of Python and R packages designed to run all the tutorial notebooks, and supporting a broad range of oceanographic applications. This environment is created and managed using the open-source Conda package and environment management system for installing multiple versions of software packages together with their dependencies, and convenient switching between environments. Conda runs on Windows, macOS, and Linux: \"Conda quickly installs, runs, and updates packages and their dependencies. Conda easily creates, saves, loads, and switches between environments on your local computer. It was created for Python programs but it can package and distribute software for any language.\" Conda may be used on your computer as well as the Hub ... https://github.com/oceanhackweek/ohw20-tutorials/blob/master/environment.yml For Python, the advantage of conda compared to pip is that it has a built in environment management system as well as the management of binaries, and non-Python dependencies. You do not need administrative or root permissions to install conda if you select a user-writable installation location. In the previous lesson we showed you a cloud-based environment for our work during the hackweek. What happens after the event when you want to go home and work with all the libraries we showed you? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive.","title":"What is Conda?"},{"location":"prep/conda_original/#python-software","text":"Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on.","title":"Python Software"},{"location":"prep/conda_original/#installing-miniconda","text":"","title":"Installing Miniconda"},{"location":"prep/conda_original/#windows","text":"Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings.","title":"Windows"},{"location":"prep/conda_original/#linux-and-osx","text":"You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes","title":"Linux and OSX"},{"location":"prep/conda_original/#installing-anaconda-optional","text":"NOTE: If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek. Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ...","title":"Installing Anaconda (Optional)"},{"location":"prep/conda_original/#installing-python","text":"We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the \"bash\" shell, if this is not already your default shell, you need to set it to be so (use the \"chsh -s /bin/bash\" command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands (/bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Installing Python"},{"location":"prep/git/","text":"Git Setup and Basics About Git and GitHub Git is a popular version control system that is the foundation of most open source software development. You are not required to be a Git pro in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. We will use Git and GitHub for collaborative work. Be sure to arrive at OceanHackWeek with your own GitHub account. Git Installation Windows Install Git for Windows from this link . For more setup details follow these instructions Mac OS Download the git installer and run it. Linux (Debian): sudo apt install git-all To test, open the terminal (on Windows, Git Bash) and setup your username and email: git config --global user.name \"your username\" git config --global user.email \"your email\" Getting started with Bash terminal During the hackweek it will be useful to know how to navigate between files from the command line. If you are not familiar with the linux shell commands, you can review the first three sections of this Software Carpentry Shell Novice lesson. On Windows, use the Git Bash terminal to run these commands. Terminal (command line) text editor When working on the command line (the terminal or shell), it is often handy to modify file content directly from there. For that you can use a command line editor such as nano . On Mac and Linux it is usually pre-installed, but for Windows you can follow the instructions in this link to set it up. Test your installation by opening a terminal and running nano --version . If it works you can link your git configuration with nano : git config --global core.editor \"nano -w\" Git steps and workflows Centralized vs Fork-Clone workflows Steps 1-5 focus on the Git \"centralized workflow\". We present it here as an illustration, but the workflow we recommend for use in OceanHackWeek is the Git Fork - Clone workflow, discussed in Step 6. 1. Create a project repository On your own or someone in your project group (preferably one who has never done it before), create a repository for the project under the OceanHackWeek organization, https://github.com/oceanhackweek Click New and follow the steps: check yes to create a README.md file. Format project name as ohw21-proj-myprojectname (you can change the name later), where myprojectname is a brief name for your project Invite others to the repo: Settings -> Collaborators Note to collaborators: you will receive an invitation to your email associated with github.com. If you cannnot find it look for the bell notifications on the top right of the website. 2. Clone the repository Each participant should clone the repository so they have their copy on their JupyterHub account space (and locally in the participant's computer, if desired). Navigate through the terminal to the folder where you want to keep OceanHackWeek work ( cd path_to_oceanhackweek ). git clone https://github.com/oceanhackweek/ohw21-proj-myprojectname.git This will create a new folder called ohw21-proj-myprojectname . Navigate to the new folder, ohw21-proj-myprojectname . 3. Update the README with your name Open the README.md file with your favorite editor and create a new section header. Under this section add your name. Then add this change, commit it to the local repository, and push it so that it appears on the origin GitHub repository. git add README.md git commit -m \"Adding new name to README.md\" git push origin Make sure your change appears online. Remember to run: git status to observe the changes made into your repository. Pay attention to the colors. To see the changes in the files run git diff . 4. Update your local repository (local clone) with the changes of your collaborators git pull origin master Remember origin is just a short name of the web address of the repository. To see what is hidden in origin: git remote -v To continue practicing these steps, make more changes to the title and the description of the project. Ran into a problem? When working with several people sometimes you cannot push because changes have been made that have not been incorporated: need to first pull when pulling you arrive into a merge conflict: need to resolve the conflict manually 5. Resolving the merge conflict git status You will see the file/s which caused the merge conflict in green. Open it and detect the conflict by the special format: <<<<<<< HEAD my text ======= somebody else's text >>>>>>> 35ab35436 Decide which changes you want to keep, and modify the file so it looks as you wish directly from the editor. Remove the unnecessary characters. Add, commit and push the changes. git add README.md git commit -m \"resolving merge conflict\" git push origin master You can continue working on as usual. Remember to pull often and push small changes ... ... to avoid messing with complicated merges and keep your repo up-to-date. 6. Avoiding problems: forking workflow So far you collaborated using what is called a \"centralized git workflow\": i.e. every collaborator makes directly changes to the repo. Some merge conflicts can be avoided by working with forks (using a \"forking git workflow) instead of directly pushing to the repo. Forking Git Workflow This is the workflow covered in the OHW20 pre-hackweek presentation on 2020-8-6. The presentation pdf is here , and the recording is here ; the workflow is the one recommended for use in OHW21. Here's an excellent guide to the Forking Git Workflow: Step-by-step guide to contributing on GitHub Forks are public copies of the main repo, from which you can submit changes to the main repo. Sync your local repo with the public one Fork the public repo (click on the Fork button) Note it looks the same but the web address contains your username https://github.com/myghusername/ohw21-proj-ProjectName Go to your local repo and rename your origin to point to the fork: git remote rm origin git remote add origin https://github.com/myghusername/ohw21-proj-ProjectName.git Add a new remote to talk to the main repo: git remote add upstream https://github.com/oceanhackweek/ohw21-proj-ProjectName.git From now on you will push to origin , but pull from upstream . Warning Make sure your origin contains your github username, and upstream contains the oceanhackweek name. Submitting changes via a pull request Make some changes to a file and commit and publish them. git add README.md git commit -m \"more changes\" git push origin master Note They appear on your fork, but not on the main repo. Submit a pull request by clicking New pull request : Explain what changes you have made. Assign somebody for review. Reviewer: look through changes in the files Approve PR or ask for more changes. Note While your pull request is pending, any change you push to the fork will become a part of the request. This is useful if you are asked to make small changes before your PR is accepted. In general we encourage github users to submit changes to the main repo through pull requests, but direct push is still a viable workflow for small projects when participants work on the same documents. Troubleshooting Deleting files git rm filename.txt rm filename.txt Note git rm just removes the file from git, to delete the file completely use the bash rm command after that. Reverting to the previous commit git revert HEAD Note Your files in the local repo will still be there. References and Resources Git and GitHub are very powerful tools but no doubt the learning curve is steep. Learning is an iterative process so below we list some resources which can help you be better prepared: OceanHackWeek (OHW) tutorials OHW20 tutorial: Git/GitHub Survival Guide presentation. pdf and video OHW19 tutorial: Git, GitHub, and Project Collaboration. presentation files and video . This tutorial is the source of most of the materials for this Git page. git-novice - Software Carpentry Lesson (3 hours with exercises) Setting Up Git - Software Carpentry Lesson Atlassian Tutorials - Version Control An excellent guide to the Forking Git Workflow: Step-by-step guide to contributing on GitHub What is GitHub? (3:45 min) GitHub Learning Lab : practice with a bot! (On your own pace) An interactive Git Tutorial: the tool you didn\u2019t know you needed. From personal workflows to open collaboration GeoHackWeek 2019 tutorial: Getting started with Git ICESAT-2HackWeek intro-jupyter-git repo , with several notebooks going into a lot of detail.","title":"Git"},{"location":"prep/git/#git-setup-and-basics","text":"","title":"Git Setup and Basics"},{"location":"prep/git/#about-git-and-github","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to be a Git pro in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. We will use Git and GitHub for collaborative work. Be sure to arrive at OceanHackWeek with your own GitHub account.","title":"About Git and GitHub"},{"location":"prep/git/#git-installation","text":"Windows Install Git for Windows from this link . For more setup details follow these instructions Mac OS Download the git installer and run it. Linux (Debian): sudo apt install git-all To test, open the terminal (on Windows, Git Bash) and setup your username and email: git config --global user.name \"your username\" git config --global user.email \"your email\"","title":"Git Installation"},{"location":"prep/git/#getting-started-with-bash-terminal","text":"During the hackweek it will be useful to know how to navigate between files from the command line. If you are not familiar with the linux shell commands, you can review the first three sections of this Software Carpentry Shell Novice lesson. On Windows, use the Git Bash terminal to run these commands.","title":"Getting started with Bash terminal"},{"location":"prep/git/#terminal-command-line-text-editor","text":"When working on the command line (the terminal or shell), it is often handy to modify file content directly from there. For that you can use a command line editor such as nano . On Mac and Linux it is usually pre-installed, but for Windows you can follow the instructions in this link to set it up. Test your installation by opening a terminal and running nano --version . If it works you can link your git configuration with nano : git config --global core.editor \"nano -w\"","title":"Terminal (command line) text editor"},{"location":"prep/git/#git-steps-and-workflows","text":"Centralized vs Fork-Clone workflows Steps 1-5 focus on the Git \"centralized workflow\". We present it here as an illustration, but the workflow we recommend for use in OceanHackWeek is the Git Fork - Clone workflow, discussed in Step 6.","title":"Git steps and workflows"},{"location":"prep/git/#1-create-a-project-repository","text":"On your own or someone in your project group (preferably one who has never done it before), create a repository for the project under the OceanHackWeek organization, https://github.com/oceanhackweek Click New and follow the steps: check yes to create a README.md file. Format project name as ohw21-proj-myprojectname (you can change the name later), where myprojectname is a brief name for your project Invite others to the repo: Settings -> Collaborators Note to collaborators: you will receive an invitation to your email associated with github.com. If you cannnot find it look for the bell notifications on the top right of the website.","title":"1. Create a project repository"},{"location":"prep/git/#2-clone-the-repository","text":"Each participant should clone the repository so they have their copy on their JupyterHub account space (and locally in the participant's computer, if desired). Navigate through the terminal to the folder where you want to keep OceanHackWeek work ( cd path_to_oceanhackweek ). git clone https://github.com/oceanhackweek/ohw21-proj-myprojectname.git This will create a new folder called ohw21-proj-myprojectname . Navigate to the new folder, ohw21-proj-myprojectname .","title":"2. Clone the repository"},{"location":"prep/git/#3-update-the-readme-with-your-name","text":"Open the README.md file with your favorite editor and create a new section header. Under this section add your name. Then add this change, commit it to the local repository, and push it so that it appears on the origin GitHub repository. git add README.md git commit -m \"Adding new name to README.md\" git push origin Make sure your change appears online. Remember to run: git status to observe the changes made into your repository. Pay attention to the colors. To see the changes in the files run git diff .","title":"3. Update the README with your name"},{"location":"prep/git/#4-update-your-local-repository-local-clone-with-the-changes-of-your-collaborators","text":"git pull origin master Remember origin is just a short name of the web address of the repository. To see what is hidden in origin: git remote -v To continue practicing these steps, make more changes to the title and the description of the project. Ran into a problem? When working with several people sometimes you cannot push because changes have been made that have not been incorporated: need to first pull when pulling you arrive into a merge conflict: need to resolve the conflict manually","title":"4. Update your local repository (local clone) with the changes of your collaborators"},{"location":"prep/git/#5-resolving-the-merge-conflict","text":"git status You will see the file/s which caused the merge conflict in green. Open it and detect the conflict by the special format: <<<<<<< HEAD my text ======= somebody else's text >>>>>>> 35ab35436 Decide which changes you want to keep, and modify the file so it looks as you wish directly from the editor. Remove the unnecessary characters. Add, commit and push the changes. git add README.md git commit -m \"resolving merge conflict\" git push origin master You can continue working on as usual. Remember to pull often and push small changes ... ... to avoid messing with complicated merges and keep your repo up-to-date.","title":"5. Resolving the merge conflict"},{"location":"prep/git/#6-avoiding-problems-forking-workflow","text":"So far you collaborated using what is called a \"centralized git workflow\": i.e. every collaborator makes directly changes to the repo. Some merge conflicts can be avoided by working with forks (using a \"forking git workflow) instead of directly pushing to the repo. Forking Git Workflow This is the workflow covered in the OHW20 pre-hackweek presentation on 2020-8-6. The presentation pdf is here , and the recording is here ; the workflow is the one recommended for use in OHW21. Here's an excellent guide to the Forking Git Workflow: Step-by-step guide to contributing on GitHub Forks are public copies of the main repo, from which you can submit changes to the main repo. Sync your local repo with the public one Fork the public repo (click on the Fork button) Note it looks the same but the web address contains your username https://github.com/myghusername/ohw21-proj-ProjectName Go to your local repo and rename your origin to point to the fork: git remote rm origin git remote add origin https://github.com/myghusername/ohw21-proj-ProjectName.git Add a new remote to talk to the main repo: git remote add upstream https://github.com/oceanhackweek/ohw21-proj-ProjectName.git From now on you will push to origin , but pull from upstream . Warning Make sure your origin contains your github username, and upstream contains the oceanhackweek name.","title":"6. Avoiding problems: forking workflow"},{"location":"prep/git/#submitting-changes-via-a-pull-request","text":"Make some changes to a file and commit and publish them. git add README.md git commit -m \"more changes\" git push origin master Note They appear on your fork, but not on the main repo. Submit a pull request by clicking New pull request : Explain what changes you have made. Assign somebody for review. Reviewer: look through changes in the files Approve PR or ask for more changes. Note While your pull request is pending, any change you push to the fork will become a part of the request. This is useful if you are asked to make small changes before your PR is accepted. In general we encourage github users to submit changes to the main repo through pull requests, but direct push is still a viable workflow for small projects when participants work on the same documents.","title":"Submitting changes via a pull request"},{"location":"prep/git/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"prep/git/#deleting-files","text":"git rm filename.txt rm filename.txt Note git rm just removes the file from git, to delete the file completely use the bash rm command after that.","title":"Deleting files"},{"location":"prep/git/#reverting-to-the-previous-commit","text":"git revert HEAD Note Your files in the local repo will still be there.","title":"Reverting to the previous commit"},{"location":"prep/git/#references-and-resources","text":"Git and GitHub are very powerful tools but no doubt the learning curve is steep. Learning is an iterative process so below we list some resources which can help you be better prepared: OceanHackWeek (OHW) tutorials OHW20 tutorial: Git/GitHub Survival Guide presentation. pdf and video OHW19 tutorial: Git, GitHub, and Project Collaboration. presentation files and video . This tutorial is the source of most of the materials for this Git page. git-novice - Software Carpentry Lesson (3 hours with exercises) Setting Up Git - Software Carpentry Lesson Atlassian Tutorials - Version Control An excellent guide to the Forking Git Workflow: Step-by-step guide to contributing on GitHub What is GitHub? (3:45 min) GitHub Learning Lab : practice with a bot! (On your own pace) An interactive Git Tutorial: the tool you didn\u2019t know you needed. From personal workflows to open collaboration GeoHackWeek 2019 tutorial: Getting started with Git ICESAT-2HackWeek intro-jupyter-git repo , with several notebooks going into a lot of detail.","title":"References and Resources"},{"location":"prep/github/","text":"GitHub About Git and GitHub Git is a popular version control system that is the foundation of most open source software development. You are not required to be a Git pro in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. We will use Git and GitHub for collaborative work. Be sure to arrive at OceanHackWeek with your own GitHub account. Why do I need a GitHub account? There are two reasons you are required to have a GitHub account for the hackweek: All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later! Why are we joining a GitHub Organization? GitHub organizations are a convenient way for teams to get all content relevant to a specific project or workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have \"teams\" that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called oceanhackweek at https://github.com/oceanhackweek . For security purposes you can only join the organization by invitation. You should already have received the invitation to GitHub. If you didn't: Once you have a GitHub ID, send it to Emilio Mayorga on our Slack channel We will then send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation How will GitHub repositories be structured? When you click on the \"Repositories\" tab in the OceanHackWeek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each past project. There is a repository for the public-facing website you used to register for this event, and a repository for the Resources web site. We'll also create new repositories for each project when we meet in person. How do I learn more? We encourage you to start practicing with Git and GitHub in advance of this event. See the additional resources listed in the Git page .","title":"GitHub"},{"location":"prep/github/#github","text":"","title":"GitHub"},{"location":"prep/github/#about-git-and-github","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to be a Git pro in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. We will use Git and GitHub for collaborative work. Be sure to arrive at OceanHackWeek with your own GitHub account.","title":"About Git and GitHub"},{"location":"prep/github/#why-do-i-need-a-github-account","text":"There are two reasons you are required to have a GitHub account for the hackweek: All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later!","title":"Why do I need a GitHub account?"},{"location":"prep/github/#why-are-we-joining-a-github-organization","text":"GitHub organizations are a convenient way for teams to get all content relevant to a specific project or workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have \"teams\" that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called oceanhackweek at https://github.com/oceanhackweek . For security purposes you can only join the organization by invitation. You should already have received the invitation to GitHub. If you didn't: Once you have a GitHub ID, send it to Emilio Mayorga on our Slack channel We will then send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation","title":"Why are we joining a GitHub Organization?"},{"location":"prep/github/#how-will-github-repositories-be-structured","text":"When you click on the \"Repositories\" tab in the OceanHackWeek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each past project. There is a repository for the public-facing website you used to register for this event, and a repository for the Resources web site. We'll also create new repositories for each project when we meet in person.","title":"How will GitHub repositories be structured?"},{"location":"prep/github/#how-do-i-learn-more","text":"We encourage you to start practicing with Git and GitHub in advance of this event. See the additional resources listed in the Git page .","title":"How do I learn more?"},{"location":"prep/jupyterhub/","text":"JupyterHub Jupyter notebooks and the Jupyter ecosystem You may have heard of Jupyter -- an open computing \"ecosystem\" developed by Project Jupyter . This ecosystem is described succinctly and effectively in the online open book, Teaching and Learning with Jupyter : Project Jupyter is three things: a collection of standards, a community, and a set of software tools. Jupyter Notebook, one part of Jupyter, is software that creates a Jupyter notebook. A Jupyter notebook is a document that supports mixing executable code, equations, visualizations, and narrative text. Specifically, Jupyter notebooks allow the user to bring together data, code, and prose, to tell an interactive, computational story. ( \"2.2 But first, what is Jupyter Notebook?\" ) We will use the JupyterLab software to create, manage and run Jupyter notebooks. You will be exposed to Jupyter notebooks throughout the hackweek, including in most tutorials. To learn more about Jupyter, Jupyter notebooks and JupyterLab: Check out several sections in the Teaching and Learning with Jupyter online open book, specially Chapter 5 Jupyter Notebook ecosystem . See the OceanHackWeek 2020 pre-hackweek tutorial \"Jupyter and Scientific Python basics: numpy, pandas, matplotlib\", which demonstrates effective Jupyter use both on your computer (\"locally\") and on JupyterHub: Jupyter notebooks \u2014 tutorial video . The video includes Q&As at the end where you'll find common questions you may find asking yourself. See the resources at the end of this page . Why are we using a shared cloud computing environment? Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. There are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. For this hackweek we have created virtual computing instances that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server ( JupyterLab ) to each person in a group. These (slightly old) slides give a nice overview of what JupyterHub is all about. JupyterHub enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers. We encourage you to use our shared JupyterHub resources for running all the tutorials and for your projects. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event. How do I access the shared cloud environment? Access to our shared cloud environment is easy. Just click on https://ohw.pilot.2i2c.cloud You can now click on the \"Log in to continue\" button, then on the next screen click on \"Sign in with GitHub\" to grant JupyterHub the required permissions. In the next window, enter your GitHub username (or email address) and password. You will then see something like this while the JupyterHub OceanHackWeek 2021 server environment is loading: It will take a bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab graphical user interface: How do I get the tutorial repository? For the tutorials, there are two primary ways of getting the notebooks. You can use the traditional git management route ( described below ), or you can use this magical nbgitpuller link . nbgitpuller is nice, because it will automatically merge any changes you make with the changes from the upstream repo on subsequent pulls via a series of sane rules . You can accomplish the same results as nbgitpuller when using git directly, but it can take a complicated dance of git add , git stash , git pull , and git stash apply to keep your changes and get the changes from upstream. Warning If you start by using the nbgitpuller link, and then switch to using git directly, using the nbgitpuller link again will most likely lead to unpredictable results . How do I get my code in and out of JupyterHub? When you start your own instance of JupyterHub you will have access to your own virtual drive space. No other JupyterHub users will be able to see or access your data files. Next we will explain how you can upload files to your virtual drive space and how to save files from JupyterHub back to another location, such as GitHub or your own local laptop drive. First we'll show you how to pull some files from GitHub into your virtual drive space. This will be a common task during the hackweek: at the start of most tutorials we'll ask you to \"clone\" (make a copy of) the GitHub repository corresponding to the specific tutorial being taught into your JupyterHub drive space. To do this, we will need to interface with the JupyterHub file system. JupyterHub is deployed in a Linux operating system and we will need to open a terminal within the JupyterHub JupyterLab interface to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: You can issue any Linux commands to manage your local file system. Now let's clone a repository (see the Git Setup and Basics page). We'll illustrate this with the ohw-tutorials repository. First, navigate in a browser on your own computer to the repository link https://github.com/oceanhackweek/ohw-tutorials . Next, click on the green \"Code\" button and then copy the url into your clipboard by clicking the copy button (clipboard icon): Now navigate back to your command line in JupyterLab. Type git clone and then paste in the url: git clone https://github.com/oceanhackweek/ohw-tutorials.git After issuing the git clone command you should see something like this (again, the screenshot below is for a different repo, but the concept is identical): End your Hub session every day. Will I lose all of my work? When you are finished working for the day or for an extended period of time, it is important to explicitly shutdown your JupyterHub session, to reduce the load on our cloud infrastructure and overall costs. To shutdown your server , if you are viewing JupyterLab, you access the control via File > Hub Control Panel menu item: Then you can shutdown your server from your hub control panel (which you can also access directly from https://ohw.pilot.2i2c.cloud/hub/home ): Note that the menu item File > Log Out doesn't actually shut down the server, so please follow these steps instead. Warning Shutting down (Stop Server) will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day. How do I do distributed computation? Dask is available on the JupyterHub for distributed compute. To start up a Dask cluster, call from dask.distributed import Client from dask_gateway import GatewayCluster cluster = GatewayCluster() client = Client(cluster) # xarray becomes even more awesome And then either call cluster on it's own line in a cell and use the UI, or cluster.scale(NUMBER_OF_WORKERS_TO_SCALE_TO) . Info Just as it can take a few minutes for JupyterHub to start up your server, it can also take a few minutes before Dask workers become available. We are working on making Dask (and server) scaling faster, but no promises of faster scaling at this point. Similar to your server, please shutdown your Dask clusters when you are done. cluster.shutdown() # or cluster.close() References and Resources Why Jupyter is data scientists\u2019 computational notebook of choice. An improved architecture and enthusiastic user base are driving uptake of the open-source web tool (Nature, 2018-10) Teaching and Learning with Jupyter , an online open book. OceanHackWeek 2020 pre-hackweek tutorial \"Jupyter and Scientific Python basics: numpy, pandas, matplotlib\": Jupyter notebooks \u2014 tutorial video . From https://dataquest.io Jupyter Notebook for Beginners: A Tutorial Tutorial: Advanced Jupyter Notebooks 28 Jupyter Notebook Tips, Tricks, and Shortcuts Getting Started with JupyterLab Lesson 0b: Introduction to JupyterLab - (Justin Bois) Introduction to Data Analysis in the Biological Sciences, Caltech Jupyter Lab: Evolution of the Jupyter Notebook. An overview of JupyterLab, the next generation of the Jupyter Notebook.","title":"Jupyter and the Hub"},{"location":"prep/jupyterhub/#jupyterhub","text":"","title":"JupyterHub"},{"location":"prep/jupyterhub/#jupyter-notebooks-and-the-jupyter-ecosystem","text":"You may have heard of Jupyter -- an open computing \"ecosystem\" developed by Project Jupyter . This ecosystem is described succinctly and effectively in the online open book, Teaching and Learning with Jupyter : Project Jupyter is three things: a collection of standards, a community, and a set of software tools. Jupyter Notebook, one part of Jupyter, is software that creates a Jupyter notebook. A Jupyter notebook is a document that supports mixing executable code, equations, visualizations, and narrative text. Specifically, Jupyter notebooks allow the user to bring together data, code, and prose, to tell an interactive, computational story. ( \"2.2 But first, what is Jupyter Notebook?\" ) We will use the JupyterLab software to create, manage and run Jupyter notebooks. You will be exposed to Jupyter notebooks throughout the hackweek, including in most tutorials. To learn more about Jupyter, Jupyter notebooks and JupyterLab: Check out several sections in the Teaching and Learning with Jupyter online open book, specially Chapter 5 Jupyter Notebook ecosystem . See the OceanHackWeek 2020 pre-hackweek tutorial \"Jupyter and Scientific Python basics: numpy, pandas, matplotlib\", which demonstrates effective Jupyter use both on your computer (\"locally\") and on JupyterHub: Jupyter notebooks \u2014 tutorial video . The video includes Q&As at the end where you'll find common questions you may find asking yourself. See the resources at the end of this page .","title":"Jupyter notebooks and the Jupyter ecosystem"},{"location":"prep/jupyterhub/#why-are-we-using-a-shared-cloud-computing-environment","text":"Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. There are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. For this hackweek we have created virtual computing instances that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server ( JupyterLab ) to each person in a group. These (slightly old) slides give a nice overview of what JupyterHub is all about. JupyterHub enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers. We encourage you to use our shared JupyterHub resources for running all the tutorials and for your projects. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event.","title":"Why are we using a shared cloud computing environment?"},{"location":"prep/jupyterhub/#how-do-i-access-the-shared-cloud-environment","text":"Access to our shared cloud environment is easy. Just click on https://ohw.pilot.2i2c.cloud You can now click on the \"Log in to continue\" button, then on the next screen click on \"Sign in with GitHub\" to grant JupyterHub the required permissions. In the next window, enter your GitHub username (or email address) and password. You will then see something like this while the JupyterHub OceanHackWeek 2021 server environment is loading: It will take a bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab graphical user interface:","title":"How do I access the shared cloud environment?"},{"location":"prep/jupyterhub/#how-do-i-get-the-tutorial-repository","text":"For the tutorials, there are two primary ways of getting the notebooks. You can use the traditional git management route ( described below ), or you can use this magical nbgitpuller link . nbgitpuller is nice, because it will automatically merge any changes you make with the changes from the upstream repo on subsequent pulls via a series of sane rules . You can accomplish the same results as nbgitpuller when using git directly, but it can take a complicated dance of git add , git stash , git pull , and git stash apply to keep your changes and get the changes from upstream. Warning If you start by using the nbgitpuller link, and then switch to using git directly, using the nbgitpuller link again will most likely lead to unpredictable results .","title":"How do I get the tutorial repository?"},{"location":"prep/jupyterhub/#how-do-i-get-my-code-in-and-out-of-jupyterhub","text":"When you start your own instance of JupyterHub you will have access to your own virtual drive space. No other JupyterHub users will be able to see or access your data files. Next we will explain how you can upload files to your virtual drive space and how to save files from JupyterHub back to another location, such as GitHub or your own local laptop drive. First we'll show you how to pull some files from GitHub into your virtual drive space. This will be a common task during the hackweek: at the start of most tutorials we'll ask you to \"clone\" (make a copy of) the GitHub repository corresponding to the specific tutorial being taught into your JupyterHub drive space. To do this, we will need to interface with the JupyterHub file system. JupyterHub is deployed in a Linux operating system and we will need to open a terminal within the JupyterHub JupyterLab interface to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: You can issue any Linux commands to manage your local file system. Now let's clone a repository (see the Git Setup and Basics page). We'll illustrate this with the ohw-tutorials repository. First, navigate in a browser on your own computer to the repository link https://github.com/oceanhackweek/ohw-tutorials . Next, click on the green \"Code\" button and then copy the url into your clipboard by clicking the copy button (clipboard icon): Now navigate back to your command line in JupyterLab. Type git clone and then paste in the url: git clone https://github.com/oceanhackweek/ohw-tutorials.git After issuing the git clone command you should see something like this (again, the screenshot below is for a different repo, but the concept is identical):","title":"How do I get my code in and out of JupyterHub?"},{"location":"prep/jupyterhub/#end-your-hub-session-every-day-will-i-lose-all-of-my-work","text":"When you are finished working for the day or for an extended period of time, it is important to explicitly shutdown your JupyterHub session, to reduce the load on our cloud infrastructure and overall costs. To shutdown your server , if you are viewing JupyterLab, you access the control via File > Hub Control Panel menu item: Then you can shutdown your server from your hub control panel (which you can also access directly from https://ohw.pilot.2i2c.cloud/hub/home ): Note that the menu item File > Log Out doesn't actually shut down the server, so please follow these steps instead. Warning Shutting down (Stop Server) will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day.","title":"End your Hub session every day. Will I lose all of my work?"},{"location":"prep/jupyterhub/#how-do-i-do-distributed-computation","text":"Dask is available on the JupyterHub for distributed compute. To start up a Dask cluster, call from dask.distributed import Client from dask_gateway import GatewayCluster cluster = GatewayCluster() client = Client(cluster) # xarray becomes even more awesome And then either call cluster on it's own line in a cell and use the UI, or cluster.scale(NUMBER_OF_WORKERS_TO_SCALE_TO) . Info Just as it can take a few minutes for JupyterHub to start up your server, it can also take a few minutes before Dask workers become available. We are working on making Dask (and server) scaling faster, but no promises of faster scaling at this point. Similar to your server, please shutdown your Dask clusters when you are done. cluster.shutdown() # or cluster.close()","title":"How do I do distributed computation?"},{"location":"prep/jupyterhub/#references-and-resources","text":"Why Jupyter is data scientists\u2019 computational notebook of choice. An improved architecture and enthusiastic user base are driving uptake of the open-source web tool (Nature, 2018-10) Teaching and Learning with Jupyter , an online open book. OceanHackWeek 2020 pre-hackweek tutorial \"Jupyter and Scientific Python basics: numpy, pandas, matplotlib\": Jupyter notebooks \u2014 tutorial video . From https://dataquest.io Jupyter Notebook for Beginners: A Tutorial Tutorial: Advanced Jupyter Notebooks 28 Jupyter Notebook Tips, Tricks, and Shortcuts Getting Started with JupyterLab Lesson 0b: Introduction to JupyterLab - (Justin Bois) Introduction to Data Analysis in the Biological Sciences, Caltech Jupyter Lab: Evolution of the Jupyter Notebook. An overview of JupyterLab, the next generation of the Jupyter Notebook.","title":"References and Resources"},{"location":"preweek/python/","text":"Python Requirements Overview Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7. During the hackweek we will be using Python 3.7 for the tutorials, and encouraging participants to do so. If you have only used Python 2 in the past check out the key differences here . Even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during Oceanhackweek. We will be using Ocean Pangeo ( http://ocean.pangeo.io ), which is a platform for using Jupyter Notebooks in the ocean, atmospheric, and climate research community. A Jupyter Notebook is an open-source web application that allows users to create and share documents containing live code, equations, visualizations, and markdown texts. Setting up Python locally Although, you we will provide you with a Python working environment, it will be good if you set up Python locally on your laptop: you might need it for some of your project work, Python review, or for future Python development. We recommend installing the Miniconda Python distribution. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. Conda is an open source package and environment management system for python libraries . We will be using various Python libraries with multiple dependencies, so it is critical that you have some sort of package management system in place. Conda can be installed in almost any computer. The advantage of conda compared to pip is that it has a built in environment management system as well as the management of binaries, and non-python dependencies. Here are the system requirements: 32-bit or 64-bit computer. Minimum 400 MB disk space to download and install. Windows Vista or newer, OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) NOTE: You do not need administrative or root permissions to install conda if you select a user-writable install location. To test your installation you can run python in the terminal and check if the version you have is Miniconda Python 3. Let us know if on Slack you are having problems with installing Conda. Brushing up on Python Given all the heavy use of Python during Oceanhackweek, we will not be able to provide instruction in Python fundamentals. We expect you to have basic Python familiarity on the level of manipulating variables (lists, arrays), writing loops/functions, making simple plots. If you have not used Python before or it has been a while since you have used it, please, go thouroughly through the lesson below Software Carpentry Python Tutorial (1 day workshop with exercises) Notebook environment The more, the better! Here are a few more Python resources: * Codecademy Lesson (25 hours) * Python Data Science Handbook (on your own pace)","title":"Python Requirements"},{"location":"preweek/python/#python-requirements","text":"","title":"Python Requirements"},{"location":"preweek/python/#overview","text":"Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7. During the hackweek we will be using Python 3.7 for the tutorials, and encouraging participants to do so. If you have only used Python 2 in the past check out the key differences here . Even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during Oceanhackweek. We will be using Ocean Pangeo ( http://ocean.pangeo.io ), which is a platform for using Jupyter Notebooks in the ocean, atmospheric, and climate research community. A Jupyter Notebook is an open-source web application that allows users to create and share documents containing live code, equations, visualizations, and markdown texts.","title":"Overview"},{"location":"preweek/python/#setting-up-python-locally","text":"Although, you we will provide you with a Python working environment, it will be good if you set up Python locally on your laptop: you might need it for some of your project work, Python review, or for future Python development. We recommend installing the Miniconda Python distribution. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. Conda is an open source package and environment management system for python libraries . We will be using various Python libraries with multiple dependencies, so it is critical that you have some sort of package management system in place. Conda can be installed in almost any computer. The advantage of conda compared to pip is that it has a built in environment management system as well as the management of binaries, and non-python dependencies. Here are the system requirements: 32-bit or 64-bit computer. Minimum 400 MB disk space to download and install. Windows Vista or newer, OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) NOTE: You do not need administrative or root permissions to install conda if you select a user-writable install location. To test your installation you can run python in the terminal and check if the version you have is Miniconda Python 3. Let us know if on Slack you are having problems with installing Conda.","title":"Setting up Python locally"},{"location":"preweek/python/#brushing-up-on-python","text":"Given all the heavy use of Python during Oceanhackweek, we will not be able to provide instruction in Python fundamentals. We expect you to have basic Python familiarity on the level of manipulating variables (lists, arrays), writing loops/functions, making simple plots. If you have not used Python before or it has been a while since you have used it, please, go thouroughly through the lesson below Software Carpentry Python Tutorial (1 day workshop with exercises) Notebook environment The more, the better! Here are a few more Python resources: * Codecademy Lesson (25 hours) * Python Data Science Handbook (on your own pace)","title":"Brushing up on Python"},{"location":"projects/guidelines/","text":"Project Guidelines Project Template Each project requires a brief project summary in the README.md of each GitHub project folder. Below is a template for the project summary. Project title Brief title describing the proposed work. Collaborators on this project List all participants on the project. The problem What oceanographic data science problem are you going to explore? Try to focus on the data science/methodology problem first, followed by the location-specific oceanographic example afterwards. The project is likely more engaging for fellow hackers if it is centered around common data science problems. For example, the project could be to develop a workflow in Python to analyze CTD time series from multiple data sources, instead of emphasizing and focusing only on temperature variations in one very specific part of the ocean. Application example Here is where you follow up with a location-specific example of where the data science methodology applies and list example datasets (size, format, how to access) that could be used for this exploration. Specific tasks List the specific tasks you want to accomplish. Existing methods How would you or others traditionally try to address this problem? Proposed methods/tools Building from what you learn at Oceanhackweek, what new approaches would you like to try to implement? Background reading Optional: links to manuscripts or technical documents for more in-depth analysis. Project Ideas Developing tutorials for using NASA data on the cloud. Working on an efficient open source matchup tutorial for satellite orbital data and in situ point or trajectory data. Developing an OSS algorithm development toolbox in Python to deal with a 400GB AMSR brightness temperature - in situ matchup database. Argovis - a visualualization and API for accessing Argo data OHW18 Projects Project Data Storage If your group needs to store data for project use during Oceanhackweek, depending on the volume, below is what we recommend: - Whenever possible, public datasets like OOI, ARGO, satellite, etc. should be accessed remotely in the Jupyter notebook through standard protocols like OPeNDAP or other programmatic approaches. - Data that are <1 MB : can be included directly in the project Github repository. - Data that are <10 GB : can be stored in your home space on ocean.pangeo.io. When you are accessing data from the internet, it is often useful to have a cell in the notebook that downloads such data into your home space if those data are not there, otherwise do nothing if they are already there. You can also upload a local dataset through the pangeo interface. You can upload only one file as of now, so if you have multiple files you will need to zip them and unzip them later from the terminal. These are two ways to fetch and store larger datasets locally if they are not enormous. - Data that are >10 GB : are best stored in a cloud-optimized format. If you don't already have the data on the cloud, please talk to the instructors about your needs and how you anticipate using the data. We can help you prepare and upload the data to cloud object storage with Oceanhackweek support. - Questions? Feel free post on Slack #project channel or email oceanhkw@uw.edu .","title":"Guidelines"},{"location":"projects/guidelines/#project-guidelines","text":"","title":"Project Guidelines"},{"location":"projects/guidelines/#project-template","text":"Each project requires a brief project summary in the README.md of each GitHub project folder. Below is a template for the project summary.","title":"Project Template"},{"location":"projects/guidelines/#project-title","text":"Brief title describing the proposed work.","title":"Project title"},{"location":"projects/guidelines/#collaborators-on-this-project","text":"List all participants on the project.","title":"Collaborators on this project"},{"location":"projects/guidelines/#the-problem","text":"What oceanographic data science problem are you going to explore? Try to focus on the data science/methodology problem first, followed by the location-specific oceanographic example afterwards. The project is likely more engaging for fellow hackers if it is centered around common data science problems. For example, the project could be to develop a workflow in Python to analyze CTD time series from multiple data sources, instead of emphasizing and focusing only on temperature variations in one very specific part of the ocean.","title":"The problem"},{"location":"projects/guidelines/#application-example","text":"Here is where you follow up with a location-specific example of where the data science methodology applies and list example datasets (size, format, how to access) that could be used for this exploration.","title":"Application example"},{"location":"projects/guidelines/#specific-tasks","text":"List the specific tasks you want to accomplish.","title":"Specific tasks"},{"location":"projects/guidelines/#existing-methods","text":"How would you or others traditionally try to address this problem?","title":"Existing methods"},{"location":"projects/guidelines/#proposed-methodstools","text":"Building from what you learn at Oceanhackweek, what new approaches would you like to try to implement?","title":"Proposed methods/tools"},{"location":"projects/guidelines/#background-reading","text":"Optional: links to manuscripts or technical documents for more in-depth analysis.","title":"Background reading"},{"location":"projects/guidelines/#project-ideas","text":"Developing tutorials for using NASA data on the cloud. Working on an efficient open source matchup tutorial for satellite orbital data and in situ point or trajectory data. Developing an OSS algorithm development toolbox in Python to deal with a 400GB AMSR brightness temperature - in situ matchup database. Argovis - a visualualization and API for accessing Argo data OHW18 Projects","title":"Project Ideas"},{"location":"projects/guidelines/#project-data-storage","text":"If your group needs to store data for project use during Oceanhackweek, depending on the volume, below is what we recommend: - Whenever possible, public datasets like OOI, ARGO, satellite, etc. should be accessed remotely in the Jupyter notebook through standard protocols like OPeNDAP or other programmatic approaches. - Data that are <1 MB : can be included directly in the project Github repository. - Data that are <10 GB : can be stored in your home space on ocean.pangeo.io. When you are accessing data from the internet, it is often useful to have a cell in the notebook that downloads such data into your home space if those data are not there, otherwise do nothing if they are already there. You can also upload a local dataset through the pangeo interface. You can upload only one file as of now, so if you have multiple files you will need to zip them and unzip them later from the terminal. These are two ways to fetch and store larger datasets locally if they are not enormous. - Data that are >10 GB : are best stored in a cloud-optimized format. If you don't already have the data on the cloud, please talk to the instructors about your needs and how you anticipate using the data. We can help you prepare and upload the data to cloud object storage with Oceanhackweek support. - Questions? Feel free post on Slack #project channel or email oceanhkw@uw.edu .","title":"Project Data Storage"},{"location":"projects/overview/","text":"Project Overview Collaborative projects are a key component of OceanHackWeek, in which you get to interact with others closely and apply new skills to make something exciting happen: it can be creating tools to streamline access of a particular data source, visualizing some high density data interactively, testing existing models with new data sources, or anything else you may want to do at the intersection of oceanography and data science. What is a Hack? A \"hack\" is a small project that aims to solve a specific problem using computational tools. Examples of hacks include: Build a working demo of a new or modified algorithm Outline of a larger project, with some key features scoped Visualization of an old dataset in a new manner Modify an algorithm and apply it to a new dataset Combine two pre-existing pieces of code to perform some new function Create a tool to apply to work with existing code, datasets Transform code from one language to another to use with other tools Update old code to run faster, on new machines, and/or more efficiently Extend an existing project with an additional feature Simplify code to be more maintainable, aka \"paying technical debt\" Why hack at OceanHackWeek? Increasingly, research and software development are conducted by groups of people with diverse skills and backgrounds. We believe this collaborative work leads to more innovative solutions to complex problems. At OceanHackWeek, our goal is to explore with you some of the skills needed to navigate technical and social challenges of working in these kinds of collaborative settings. We believe the best way to do so is to provide opportunities for you to gain hands-on experience in working together with others on a well-defined problem related to ocean sciences.","title":"Project Overview"},{"location":"projects/overview/#project-overview","text":"Collaborative projects are a key component of OceanHackWeek, in which you get to interact with others closely and apply new skills to make something exciting happen: it can be creating tools to streamline access of a particular data source, visualizing some high density data interactively, testing existing models with new data sources, or anything else you may want to do at the intersection of oceanography and data science.","title":"Project Overview"},{"location":"projects/overview/#what-is-a-hack","text":"A \"hack\" is a small project that aims to solve a specific problem using computational tools. Examples of hacks include: Build a working demo of a new or modified algorithm Outline of a larger project, with some key features scoped Visualization of an old dataset in a new manner Modify an algorithm and apply it to a new dataset Combine two pre-existing pieces of code to perform some new function Create a tool to apply to work with existing code, datasets Transform code from one language to another to use with other tools Update old code to run faster, on new machines, and/or more efficiently Extend an existing project with an additional feature Simplify code to be more maintainable, aka \"paying technical debt\"","title":"What is a Hack?"},{"location":"projects/overview/#why-hack-at-oceanhackweek","text":"Increasingly, research and software development are conducted by groups of people with diverse skills and backgrounds. We believe this collaborative work leads to more innovative solutions to complex problems. At OceanHackWeek, our goal is to explore with you some of the skills needed to navigate technical and social challenges of working in these kinds of collaborative settings. We believe the best way to do so is to provide opportunities for you to gain hands-on experience in working together with others on a well-defined problem related to ocean sciences.","title":"Why hack at OceanHackWeek?"},{"location":"projects/projectlist/","text":"Project List 2021 Collaborating with others on small group projects is an essential part of OceanHackWeek. These projects often involve creating new tools to access and process oceanographic data or using existing tools and techniques to explore datasets in new ways. The projects from OceanHackWeek 2021 were inspired by a wide range of interests shared by the participants and include a mix of Python and R programming. Characterising Acoustic Sound Scattering Layers Project leads: Nick Mortimer Presentation: Characterising Acoustic Sound Scattering Layers GitHub: https://github.com/oceanhackweek/ohw21-proj-bioacoustics Acoustic data contains information about organisms in the scattering layers. For example, diel vertical migration behavior is visible. The project aims to build tools for classifying and interpreting this data. CMIP analysis ready data (ARD) workflow : turning big climate projection data into useful inputs for modelling or analysis Project leads: Thomas Moore, Paige Martin, Julius Busecke Presentation: Oceania event recording , Main virtual event recording GitHub: https://github.com/oceanhackweek/ohw21-proj-cmip-ard CMIP (Climate Model Intercomparison Project) is a collection of global climate models and is a foundation of global climate projections, helping society better understand the choices we must either make or the impact the communities and industries of our children will face. However there are often barriers (big data, file format, coding familiarity \u2013 R vs Python, technical terminology) and challenges (Do I need to dedrift the data? What is this calendar on that model?) for new users or specific disciplines, such as the marine ecology / ecological modelling community. This is a project to learn & document examples of CMIP6 workflows, turning big climate projection data into useful inputs for modelling and analysis. Matching open source environmental data to tagged species data (\"Xtractopy\") Project leads: Jackie Veatch Presentation: Xtractopy GitHub: https://github.com/oceanhackweek/OHW21_proj_tag_data A significant gap in many ecologists' toolkits is being able to connect animal tracking data to ocean processes easily and to visualize this combined data. The goal of this project is to optimize a tool for making environmental data (ocean velocity, eddy kinetic energy, SST, etc.) in an easy-to-use format for ecological research (i.e., make available environmental data easier to load into R or Python, format data and overlay it with GPS locations of tracked animals). Predicting ocean deep currents by satellite data Project leads: Iury Simoes-Sousa Presentation: Estimating Deep Ocean Currents with Satellite Data GitHub: https://github.com/oceanhackweek/ohw21-proj-deep-currents Estimating deep currents from surface satellite data, exploring trends & variability from satellites, and training a machine learning model to predict deep-water dynamics. Pull/Hack all ocean data repositories into a global searchable resource Project leads: Steve Diggs, Myranda Uselton Presentation: Multi-Repository Searching GitHub: https://github.com/oceanhackweek/metadata-repository Continue building a comprehensive ocean data search web presence to find the data you need right now. Many of the OceanHackWeek projects undertaken this week highlight the need for an easy way to search for the right data set for the task. This is a continuation of previous work under NSF's EarthCube initiave. Quality control of high frequency radar data Project leads: Teresa Updyke, John Stanco Presentation: HF Radar Quality Control GitHub: https://github.com/oceanhackweek/ohw21-proj-radar-qc Python package for loading and processing HF radar spectra in Cross-Spectrum file format. High frequency radar surface current data comparisons Project leads: Teresa Updyke Presentation: High frequency radar data to measure coastal currents GitHub: https://github.com/oceanhackweek/ohw21-proj-coastal-radar Comparing and visualizing HF radar and other datasets. Use drone imagery of turtles, classify using neural network Project leads: Johnathan Evanilla Presentation: Turtle Detection Using Deep Learning GitHub: https://github.com/oceanhackweek/ohw21-proj-drone-turtles Use neural networks and pytorch to classify drone imagery of turtles. Continuing OHW2020 project on OBIS and MPAs Project leads: Enrique Montes, Lei Ma Presentation: Marine Protected Areas GitHub: https://github.com/oceanhackweek/ohw20-proj-species-marine-protected-areas Linking OBIS records of marine species distributions with satellite imagery of environmental variables in Marine Protected Areas (MPAs). Impact of Submarine Volcanism on Ocean World Habitability Project leads: Laura Rodriguez Presentation: Impact of Submarine Volcanism on Habitability GitHub: https://github.com/oceanhackweek/ohw21-proj-biological-activity-driven-by-geologic-events Tracking the impact of underwater volcanic eruptions on nutrient availability and microbial activity: a case study of the axial seamount eruption. Sampling high-resolution model output as if by an in situ platform (ship, glider, mooring, etc.) Project lead: Kyla Drushka Presentation: Model Subsampling Project GitHub: https://github.com/oceanhackweek/ohw21-proj-model-subsampling The goal of this project was to create a Python package that takes an input trajectory (e.g., the path of an ocean glider), subsamples output from a high-resolution ocean simulation along that trajectory, and returns a set of subsampled variables (e.g., standard physical variables temperature, salinity, velocity; derived physical quantities such as steric height; biogeochemical quantities if available). We envision this package having two potential uses: 1) designing in situ sampling strategies, and 2) interpreting in situ data in the context of a highly resolved oceanographic model.","title":"OHW21 Projects"},{"location":"projects/projectlist/#project-list-2021","text":"Collaborating with others on small group projects is an essential part of OceanHackWeek. These projects often involve creating new tools to access and process oceanographic data or using existing tools and techniques to explore datasets in new ways. The projects from OceanHackWeek 2021 were inspired by a wide range of interests shared by the participants and include a mix of Python and R programming.","title":"Project List 2021"},{"location":"projects/projectlist/#characterising-acoustic-sound-scattering-layers","text":"Project leads: Nick Mortimer Presentation: Characterising Acoustic Sound Scattering Layers GitHub: https://github.com/oceanhackweek/ohw21-proj-bioacoustics Acoustic data contains information about organisms in the scattering layers. For example, diel vertical migration behavior is visible. The project aims to build tools for classifying and interpreting this data.","title":"Characterising Acoustic Sound Scattering Layers"},{"location":"projects/projectlist/#cmip-analysis-ready-data-ard-workflow-turning-big-climate-projection-data-into-useful-inputs-for-modelling-or-analysis","text":"Project leads: Thomas Moore, Paige Martin, Julius Busecke Presentation: Oceania event recording , Main virtual event recording GitHub: https://github.com/oceanhackweek/ohw21-proj-cmip-ard CMIP (Climate Model Intercomparison Project) is a collection of global climate models and is a foundation of global climate projections, helping society better understand the choices we must either make or the impact the communities and industries of our children will face. However there are often barriers (big data, file format, coding familiarity \u2013 R vs Python, technical terminology) and challenges (Do I need to dedrift the data? What is this calendar on that model?) for new users or specific disciplines, such as the marine ecology / ecological modelling community. This is a project to learn & document examples of CMIP6 workflows, turning big climate projection data into useful inputs for modelling and analysis.","title":"CMIP analysis ready data (ARD) workflow : turning big climate projection data into useful inputs for modelling or analysis"},{"location":"projects/projectlist/#matching-open-source-environmental-data-to-tagged-species-data-xtractopy","text":"Project leads: Jackie Veatch Presentation: Xtractopy GitHub: https://github.com/oceanhackweek/OHW21_proj_tag_data A significant gap in many ecologists' toolkits is being able to connect animal tracking data to ocean processes easily and to visualize this combined data. The goal of this project is to optimize a tool for making environmental data (ocean velocity, eddy kinetic energy, SST, etc.) in an easy-to-use format for ecological research (i.e., make available environmental data easier to load into R or Python, format data and overlay it with GPS locations of tracked animals).","title":"Matching open source environmental data to tagged species data (\"Xtractopy\")"},{"location":"projects/projectlist/#predicting-ocean-deep-currents-by-satellite-data","text":"Project leads: Iury Simoes-Sousa Presentation: Estimating Deep Ocean Currents with Satellite Data GitHub: https://github.com/oceanhackweek/ohw21-proj-deep-currents Estimating deep currents from surface satellite data, exploring trends & variability from satellites, and training a machine learning model to predict deep-water dynamics.","title":"Predicting ocean deep currents by satellite data"},{"location":"projects/projectlist/#pullhack-all-ocean-data-repositories-into-a-global-searchable-resource","text":"Project leads: Steve Diggs, Myranda Uselton Presentation: Multi-Repository Searching GitHub: https://github.com/oceanhackweek/metadata-repository Continue building a comprehensive ocean data search web presence to find the data you need right now. Many of the OceanHackWeek projects undertaken this week highlight the need for an easy way to search for the right data set for the task. This is a continuation of previous work under NSF's EarthCube initiave.","title":"Pull/Hack all ocean data repositories into a global searchable resource"},{"location":"projects/projectlist/#quality-control-of-high-frequency-radar-data","text":"Project leads: Teresa Updyke, John Stanco Presentation: HF Radar Quality Control GitHub: https://github.com/oceanhackweek/ohw21-proj-radar-qc Python package for loading and processing HF radar spectra in Cross-Spectrum file format.","title":"Quality control of high frequency radar data"},{"location":"projects/projectlist/#high-frequency-radar-surface-current-data-comparisons","text":"Project leads: Teresa Updyke Presentation: High frequency radar data to measure coastal currents GitHub: https://github.com/oceanhackweek/ohw21-proj-coastal-radar Comparing and visualizing HF radar and other datasets.","title":"High frequency radar surface current data comparisons"},{"location":"projects/projectlist/#use-drone-imagery-of-turtles-classify-using-neural-network","text":"Project leads: Johnathan Evanilla Presentation: Turtle Detection Using Deep Learning GitHub: https://github.com/oceanhackweek/ohw21-proj-drone-turtles Use neural networks and pytorch to classify drone imagery of turtles.","title":"Use drone imagery of turtles, classify using neural network"},{"location":"projects/projectlist/#continuing-ohw2020-project-on-obis-and-mpas","text":"Project leads: Enrique Montes, Lei Ma Presentation: Marine Protected Areas GitHub: https://github.com/oceanhackweek/ohw20-proj-species-marine-protected-areas Linking OBIS records of marine species distributions with satellite imagery of environmental variables in Marine Protected Areas (MPAs).","title":"Continuing OHW2020 project on OBIS and MPAs"},{"location":"projects/projectlist/#impact-of-submarine-volcanism-on-ocean-world-habitability","text":"Project leads: Laura Rodriguez Presentation: Impact of Submarine Volcanism on Habitability GitHub: https://github.com/oceanhackweek/ohw21-proj-biological-activity-driven-by-geologic-events Tracking the impact of underwater volcanic eruptions on nutrient availability and microbial activity: a case study of the axial seamount eruption.","title":"Impact of Submarine Volcanism on Ocean World Habitability"},{"location":"projects/projectlist/#sampling-high-resolution-model-output-as-if-by-an-in-situ-platform-ship-glider-mooring-etc","text":"Project lead: Kyla Drushka Presentation: Model Subsampling Project GitHub: https://github.com/oceanhackweek/ohw21-proj-model-subsampling The goal of this project was to create a Python package that takes an input trajectory (e.g., the path of an ocean glider), subsamples output from a high-resolution ocean simulation along that trajectory, and returns a set of subsampled variables (e.g., standard physical variables temperature, salinity, velocity; derived physical quantities such as steric height; biogeochemical quantities if available). We envision this package having two potential uses: 1) designing in situ sampling strategies, and 2) interpreting in situ data in the context of a highly resolved oceanographic model.","title":"Sampling high-resolution model output as if by an in situ platform (ship, glider, mooring, etc.)"},{"location":"projects/steps/","text":"Hacking at OHW21 How will the projects be conducted? We have put together the Project proposal form that includes a list of questions that walk you through the few things to consider while setting up a project. Feel free to bounce ideas and form groups in the #ohw21_project channel prior to the event, and submit the proposal form when you think you/your team is ready. On Tuesday August 3 we will have a brief \u201cproject setup\u201d session for an overview of all projects already proposed up to that point, and give another opportunity to pitch new ideas that may be formed throughout the day. The deadline to submit project proposals is 3pm PDT / 6pm EDT / 22:00 UTC that day. Tips for getting started Potentially choose something that you've been interested but haven't had the time or skills to do before, or something you can continue to work on post OceanHackWeek! Hacking is a community activity! It's okay to choose projects that you can't accomplish alone as other people will be there to help you, both at OceanHackWeek and outside of it! Help your group member: you might be the person they need to solve their problem, and vice versa. When discussing, pitch your explanation to the least experienced hacker in the group, and you'll end up better understanding what you're trying to do, or need to revise your idea. You can mix programming languages as needed in order to get started, but do check in with your project mentors and group members to make sure your efforts are straightforward to be absorbed into the project. See projects from previous years: The links below lead to project lists from past OceanHackWeek events, including links to GitHub repositories and video presentations. OHW20 project list OHW19 project list OHW18 project list Creating a GitHub repository for your project Once a project moves forward, please create a GitHub repository for the project in the OceanHackWeek GitHub organization https://github.com/oceanhackweek/ , following this format for project name: ohw21-proj-myprojectname (you can change the name later), where myprojectname is a brief name for your project. Go to the Git steps and workflows section on the Git page in this web site for detailed instructions on how to create the repository and collaborate with project team members using git and GitHub.","title":"Hacking at OHW21"},{"location":"projects/steps/#hacking-at-ohw21","text":"","title":"Hacking at OHW21"},{"location":"projects/steps/#how-will-the-projects-be-conducted","text":"We have put together the Project proposal form that includes a list of questions that walk you through the few things to consider while setting up a project. Feel free to bounce ideas and form groups in the #ohw21_project channel prior to the event, and submit the proposal form when you think you/your team is ready. On Tuesday August 3 we will have a brief \u201cproject setup\u201d session for an overview of all projects already proposed up to that point, and give another opportunity to pitch new ideas that may be formed throughout the day. The deadline to submit project proposals is 3pm PDT / 6pm EDT / 22:00 UTC that day.","title":"How will the projects be conducted?"},{"location":"projects/steps/#tips-for-getting-started","text":"Potentially choose something that you've been interested but haven't had the time or skills to do before, or something you can continue to work on post OceanHackWeek! Hacking is a community activity! It's okay to choose projects that you can't accomplish alone as other people will be there to help you, both at OceanHackWeek and outside of it! Help your group member: you might be the person they need to solve their problem, and vice versa. When discussing, pitch your explanation to the least experienced hacker in the group, and you'll end up better understanding what you're trying to do, or need to revise your idea. You can mix programming languages as needed in order to get started, but do check in with your project mentors and group members to make sure your efforts are straightforward to be absorbed into the project.","title":"Tips for getting started"},{"location":"projects/steps/#see-projects-from-previous-years","text":"The links below lead to project lists from past OceanHackWeek events, including links to GitHub repositories and video presentations. OHW20 project list OHW19 project list OHW18 project list","title":"See projects from previous years:"},{"location":"projects/steps/#creating-a-github-repository-for-your-project","text":"Once a project moves forward, please create a GitHub repository for the project in the OceanHackWeek GitHub organization https://github.com/oceanhackweek/ , following this format for project name: ohw21-proj-myprojectname (you can change the name later), where myprojectname is a brief name for your project. Go to the Git steps and workflows section on the Git page in this web site for detailed instructions on how to create the repository and collaborate with project team members using git and GitHub.","title":"Creating a GitHub repository for your project"},{"location":"tutorials/getting_started/","text":"Getting started on tutorials Introduction Tutorials will be run live as Jupyter notebooks on the OceanHackWeek JupyterHub (\"The Hub\"), https://ohw.pilot.2i2c.cloud in your browser. The instructor and all participants can be running their own copies of the notebooks in their Hub account, with files cloned from the OHW source in GitHub. Below are instructions for getting the tutorials started on the the Hub in your browser, and updating the tutorials files with the latest version from GitHub. The schedule of tutorials is available here , and links to tutorial materials and some background resources will be available there as well. How do I get the tutorial repository into the Hub? For the tutorials, we recommend the use of nbgitpuller to clone and pull the tutorial repository, https://github.com/oceanhackweek/ohw-tutorials , or update the clone you already have. Use this magical nbgitpuller link to accomplish this clone or update. See this extended discussion for more details about nbgitpuller and the alternative approach relying on git commands and GitHub workflows.","title":"Getting Started"},{"location":"tutorials/getting_started/#getting-started-on-tutorials","text":"","title":"Getting started on tutorials"},{"location":"tutorials/getting_started/#introduction","text":"Tutorials will be run live as Jupyter notebooks on the OceanHackWeek JupyterHub (\"The Hub\"), https://ohw.pilot.2i2c.cloud in your browser. The instructor and all participants can be running their own copies of the notebooks in their Hub account, with files cloned from the OHW source in GitHub. Below are instructions for getting the tutorials started on the the Hub in your browser, and updating the tutorials files with the latest version from GitHub. The schedule of tutorials is available here , and links to tutorial materials and some background resources will be available there as well.","title":"Introduction"},{"location":"tutorials/getting_started/#how-do-i-get-the-tutorial-repository-into-the-hub","text":"For the tutorials, we recommend the use of nbgitpuller to clone and pull the tutorial repository, https://github.com/oceanhackweek/ohw-tutorials , or update the clone you already have. Use this magical nbgitpuller link to accomplish this clone or update. See this extended discussion for more details about nbgitpuller and the alternative approach relying on git commands and GitHub workflows.","title":"How do I get the tutorial repository into the Hub?"}]}